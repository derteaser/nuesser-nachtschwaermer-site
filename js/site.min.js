!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("uikit",e):(t=t||self).UIkit=e()}(this,function(){"use strict";function u(i,n){return function(t){var e=arguments.length;return e?1<e?i.apply(n,arguments):i.call(n,t):i.call(n)}}var e=Object.prototype,i=e.hasOwnProperty;function c(t,e){return i.call(t,e)}var n={},r=/([a-z\d])([A-Z])/g;function d(t){return t in n||(n[t]=t.replace(r,"$1-$2").toLowerCase()),n[t]}var o=/-(\w)/g;function f(t){return t.replace(o,s)}function s(t,e){return e?e.toUpperCase():""}function g(t){return t.length?s(0,t.charAt(0))+t.slice(1):""}var t=String.prototype,a=t.startsWith||function(t){return 0===this.lastIndexOf(t,0)};function w(t,e){return a.call(t,e)}var h=t.endsWith||function(t){return this.substr(-t.length)===t};function l(t,e){return h.call(t,e)}function p(t,e){return~this.indexOf(t,e)}var v=Array.prototype,m=t.includes||p,x=v.includes||p;function y(t,e){return t&&(_(t)?m:x).call(t,e)}var b=v.findIndex||function(t){for(var e=arguments,i=0;i<this.length;i++)if(t.call(e[1],this[i],i,this))return i;return-1};function k(t,e){return b.call(t,e)}var C=Array.isArray;function L(t){return"function"==typeof t}function $(t){return null!==t&&"object"==typeof t}function M(t){return $(t)&&Object.getPrototypeOf(t)===e}function B(t){return $(t)&&t===t.window}function I(t){return $(t)&&9===t.nodeType}function S(t){return $(t)&&!!t.jquery}function E(t){return t instanceof Node||$(t)&&1<=t.nodeType}var T=e.toString;function A(t){return T.call(t).match(/^\[object (NodeList|HTMLCollection)\]$/)}function z(t){return"boolean"==typeof t}function _(t){return"string"==typeof t}function N(t){return"number"==typeof t}function H(t){return N(t)||_(t)&&!isNaN(t-parseFloat(t))}function O(t){return!(C(t)?t.length:$(t)&&Object.keys(t).length)}function D(t){return void 0===t}function P(t){return z(t)?t:"true"===t||"1"===t||""===t||"false"!==t&&"0"!==t&&t}function j(t){var e=Number(t);return!isNaN(e)&&e}function Z(t){return parseFloat(t)||0}function F(t){return E(t)||B(t)||I(t)?t:A(t)||S(t)?t[0]:C(t)?F(t[0]):null}function V(t){return E(t)?[t]:A(t)?v.slice.call(t):C(t)?t.map(F).filter(Boolean):S(t)?t.toArray():[]}function W(t){return C(t)?t:_(t)?t.split(/,(?![^(]*\))/).map(function(t){return H(t)?j(t):P(t.trim())}):[t]}function q(t){return t?l(t,"ms")?Z(t):1e3*Z(t):0}function R(t,i){return t===i||$(t)&&$(i)&&Object.keys(t).length===Object.keys(i).length&&X(t,function(t,e){return t===i[e]})}function Y(t,e,i){return t.replace(new RegExp(e+"|"+i,"mg"),function(t){return t===e?i:e})}var U=Object.assign||function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];t=Object(t);for(var n=0;n<e.length;n++){var r=e[n];if(null!==r)for(var o in r)c(r,o)&&(t[o]=r[o])}return t};function X(t,e){for(var i in t)if(!1===e(t[i],i))return!1;return!0}function K(t,r){return t.sort(function(t,e){var i=t[r];void 0===i&&(i=0);var n=e[r];return void 0===n&&(n=0),n<i?1:i<n?-1:0})}function G(t,i){var n=new Set;return t.filter(function(t){var e=t[i];return!n.has(e)&&(n.add(e)||!0)})}function J(t,e,i){return void 0===e&&(e=0),void 0===i&&(i=1),Math.min(Math.max(j(t)||0,e),i)}function Q(){}function tt(t,e){return t.left<e.right&&t.right>e.left&&t.top<e.bottom&&t.bottom>e.top}function et(t,e){return t.x<=e.right&&t.x>=e.left&&t.y<=e.bottom&&t.y>=e.top}var it={ratio:function(t,e,i){var n,r="width"===e?"height":"width";return(n={})[r]=t[e]?Math.round(i*t[r]/t[e]):t[r],n[e]=i,n},contain:function(i,n){var r=this;return X(i=U({},i),function(t,e){return i=i[e]>n[e]?r.ratio(i,e,n[e]):i}),i},cover:function(i,n){var r=this;return X(i=this.contain(i,n),function(t,e){return i=i[e]<n[e]?r.ratio(i,e,n[e]):i}),i}};function nt(t,e,i){if($(e))for(var n in e)nt(t,n,e[n]);else{if(D(i))return(t=F(t))&&t.getAttribute(e);V(t).forEach(function(t){L(i)&&(i=i.call(t,nt(t,e))),null===i?ot(t,e):t.setAttribute(e,i)})}}function rt(t,e){return V(t).some(function(t){return t.hasAttribute(e)})}function ot(t,e){t=V(t),e.split(" ").forEach(function(e){return t.forEach(function(t){return t.hasAttribute(e)&&t.removeAttribute(e)})})}function st(t,e){for(var i=0,n=[e,"data-"+e];i<n.length;i++)if(rt(t,n[i]))return nt(t,n[i])}function at(t,e){return F(t)||lt(t,ct(t,e))}function ht(t,e){var i=V(t);return i.length&&i||ut(t,ct(t,e))}function ct(t,e){return void 0===e&&(e=document),pt(t)||I(e)?e:e.ownerDocument}function lt(t,e){return F(dt(t,e,"querySelector"))}function ut(t,e){return V(dt(t,e,"querySelectorAll"))}function dt(t,s,e){if(void 0===s&&(s=document),!t||!_(t))return null;var a;pt(t=t.replace(gt,"$1 *"))&&(a=[],t=function(t){return t.match(vt).map(function(t){return t.replace(/,$/,"").trim()})}(t).map(function(t,e){var i=s;if("!"===t[0]){var n=t.substr(1).trim().split(" ");i=bt(s.parentNode,n[0]),t=n.slice(1).join(" ").trim()}if("-"===t[0]){var r=t.substr(1).trim().split(" "),o=(i||s).previousElementSibling;i=xt(o,t.substr(1))?o:null,t=r.slice(1).join(" ")}return i?(i.id||(i.id="uk-"+Date.now()+e,a.push(function(){return ot(i,"id")})),"#"+Lt(i.id)+" "+t):null}).filter(Boolean).join(","),s=document);try{return s[e](t)}catch(t){return null}finally{a&&a.forEach(function(t){return t()})}}var ft=/(^|[^\\],)\s*[!>+~-]/,gt=/([!>+~-])(?=\s+[!>+~-]|\s*$)/g;function pt(t){return _(t)&&t.match(ft)}var vt=/.*?[^\\](?:,|$)/g;var mt=Element.prototype,wt=mt.matches||mt.webkitMatchesSelector||mt.msMatchesSelector;function xt(t,e){return V(t).some(function(t){return wt.call(t,e)})}var yt=mt.closest||function(t){var e=this;do{if(xt(e,t))return e;e=e.parentElement}while(e)};function bt(t,e){return w(e,">")&&(e=e.slice(1)),E(t)?yt.call(t,e):V(t).map(function(t){return bt(t,e)}).filter(Boolean)}function kt(t,e){var i=[];for(t=F(t);t=t.parentElement;)xt(t,e)&&i.push(t);return i}var Ct=window.CSS&&CSS.escape||function(t){return t.replace(/([^\x7f-\uFFFF\w-])/g,function(t){return"\\"+t})};function Lt(t){return _(t)?Ct.call(null,t):""}var $t={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,menuitem:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};function Mt(t){return V(t).some(function(t){return $t[t.tagName.toLowerCase()]})}function Bt(t){return V(t).some(function(t){return t.offsetWidth||t.offsetHeight||t.getClientRects().length})}var It="input,select,textarea,button";function St(t){return V(t).some(function(t){return xt(t,It)})}function Et(t,e){return V(t).filter(function(t){return xt(t,e)})}function Tt(t,e){return _(e)?xt(t,e)||bt(t,e):t===e||(I(e)?e.documentElement:F(e)).contains(F(t))}function At(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var i=Ot(t),n=i[0],r=i[1],o=i[2],s=i[3],a=i[4];return n=jt(n),o&&(s=function(t,n,r){var o=this;return function(i){t.forEach(function(t){var e=">"===n[0]?ut(n,t).reverse().filter(function(t){return Tt(i.target,t)})[0]:bt(i.target,n);e&&(i.delegate=t,i.current=e,r.call(o,i))})}}(n,o,s)),1<s.length&&(s=function(e){return function(t){return C(t.detail)?e.apply(void 0,[t].concat(t.detail)):e(t)}}(s)),r.split(" ").forEach(function(e){return n.forEach(function(t){return t.addEventListener(e,s,a)})}),function(){return zt(n,r,s,a)}}function zt(t,e,i,n){void 0===n&&(n=!1),t=jt(t),e.split(" ").forEach(function(e){return t.forEach(function(t){return t.removeEventListener(e,i,n)})})}function _t(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var i=Ot(t),n=i[0],r=i[1],o=i[2],s=i[3],a=i[4],h=i[5],c=At(n,r,o,function(t){var e=!h||h(t);e&&(c(),s(t,e))},a);return c}function Nt(t,i,n){return jt(t).reduce(function(t,e){return t&&e.dispatchEvent(Ht(i,!0,!0,n))},!0)}function Ht(t,e,i,n){if(void 0===e&&(e=!0),void 0===i&&(i=!1),_(t)){var r=document.createEvent("CustomEvent");r.initCustomEvent(t,e,i,n),t=r}return t}function Ot(t){return L(t[2])&&t.splice(2,0,!1),t}function Dt(t){return t&&"addEventListener"in t}function Pt(t){return Dt(t)?t:F(t)}function jt(t){return C(t)?t.map(Pt).filter(Boolean):_(t)?ut(t):Dt(t)?[t]:V(t)}function Zt(t){return"touch"===t.pointerType||t.touches}function Ft(t,e){void 0===e&&(e="client");var i=t.touches,n=t.changedTouches,r=i&&i[0]||n&&n[0]||t;return{x:r[e+"X"],y:r[e+"Y"]}}function Vt(){var i=this;this.promise=new Wt(function(t,e){i.reject=e,i.resolve=t})}var Wt="Promise"in window?window.Promise:Yt,qt=2,Rt="setImmediate"in window?setImmediate:setTimeout;function Yt(t){this.state=qt,this.value=void 0,this.deferred=[];var e=this;try{t(function(t){e.resolve(t)},function(t){e.reject(t)})}catch(t){e.reject(t)}}Yt.reject=function(i){return new Yt(function(t,e){e(i)})},Yt.resolve=function(i){return new Yt(function(t,e){t(i)})},Yt.all=function(s){return new Yt(function(i,t){var n=[],r=0;function e(e){return function(t){n[e]=t,(r+=1)===s.length&&i(n)}}0===s.length&&i(n);for(var o=0;o<s.length;o+=1)Yt.resolve(s[o]).then(e(o),t)})},Yt.race=function(n){return new Yt(function(t,e){for(var i=0;i<n.length;i+=1)Yt.resolve(n[i]).then(t,e)})};var Ut=Yt.prototype;function Xt(s,a){return new Wt(function(t,e){var i=U({data:null,method:"GET",headers:{},xhr:new XMLHttpRequest,beforeSend:Q,responseType:""},a);i.beforeSend(i);var n=i.xhr;for(var r in i)if(r in n)try{n[r]=i[r]}catch(t){}for(var o in n.open(i.method.toUpperCase(),s),i.headers)n.setRequestHeader(o,i.headers[o]);At(n,"load",function(){0===n.status||200<=n.status&&n.status<300||304===n.status?t(n):e(U(Error(n.statusText),{xhr:n,status:n.status}))}),At(n,"error",function(){return e(U(Error("Network Error"),{xhr:n}))}),At(n,"timeout",function(){return e(U(Error("Network Timeout"),{xhr:n}))}),n.send(i.data)})}function Kt(n,r,o){return new Wt(function(t,e){var i=new Image;i.onerror=e,i.onload=function(){return t(i)},o&&(i.sizes=o),r&&(i.srcset=r),i.src=n})}Ut.resolve=function(t){var e=this;if(e.state===qt){if(t===e)throw new TypeError("Promise settled with itself.");var i=!1;try{var n=t&&t.then;if(null!==t&&$(t)&&L(n))return void n.call(t,function(t){i||e.resolve(t),i=!0},function(t){i||e.reject(t),i=!0})}catch(t){return void(i||e.reject(t))}e.state=0,e.value=t,e.notify()}},Ut.reject=function(t){var e=this;if(e.state===qt){if(t===e)throw new TypeError("Promise settled with itself.");e.state=1,e.value=t,e.notify()}},Ut.notify=function(){var o=this;Rt(function(){if(o.state!==qt)for(;o.deferred.length;){var t=o.deferred.shift(),e=t[0],i=t[1],n=t[2],r=t[3];try{0===o.state?L(e)?n(e.call(void 0,o.value)):n(o.value):1===o.state&&(L(i)?n(i.call(void 0,o.value)):r(o.value))}catch(t){r(t)}}})},Ut.then=function(i,n){var r=this;return new Yt(function(t,e){r.deferred.push([i,n,t,e]),r.notify()})},Ut.catch=function(t){return this.then(void 0,t)};var Gt=/msie|trident/i.test(window.navigator.userAgent),Jt="rtl"===nt(document.documentElement,"dir"),Qt="ontouchstart"in window,te=window.PointerEvent,ee=Qt||window.DocumentTouch&&document instanceof DocumentTouch||navigator.maxTouchPoints,ie=te?"pointerdown":Qt?"touchstart":"mousedown",ne=te?"pointermove":Qt?"touchmove":"mousemove",re=te?"pointerup":Qt?"touchend":"mouseup",oe=te?"pointerenter":Qt?"":"mouseenter",se=te?"pointerleave":Qt?"":"mouseleave",ae=te?"pointercancel":"touchcancel";function he(t){if("loading"===document.readyState)var e=At(document,"DOMContentLoaded",function(){e(),t()});else t()}function ce(t,e){return e?V(t).indexOf(F(e)):V((t=F(t))&&t.parentNode.children).indexOf(t)}function le(t,e,i,n){void 0===i&&(i=0),void 0===n&&(n=!1);var r=(e=V(e)).length;return t=H(t)?j(t):"next"===t?i+1:"previous"===t?i-1:ce(e,t),n?J(t,0,r-1):(t%=r)<0?t+r:t}function ue(t){return(t=$e(t)).innerHTML="",t}function de(t,e){return t=$e(t),D(e)?t.innerHTML:fe(t.hasChildNodes()?ue(t):t,e)}function fe(e,t){return e=$e(e),ve(t,function(t){return e.appendChild(t)})}function ge(e,t){return e=$e(e),ve(t,function(t){return e.parentNode.insertBefore(t,e)})}function pe(e,t){return e=$e(e),ve(t,function(t){return e.nextSibling?ge(e.nextSibling,t):fe(e.parentNode,t)})}function ve(t,e){return(t=_(t)?Ce(t):t)?"length"in t?V(t).map(e):e(t):null}function me(t){V(t).map(function(t){return t.parentNode&&t.parentNode.removeChild(t)})}function we(t,e){for(e=F(ge(t,e));e.firstChild;)e=e.firstChild;return fe(e,t),e}function xe(t,e){return V(V(t).map(function(t){return t.hasChildNodes?we(V(t.childNodes),e):fe(t,e)}))}function ye(t){V(t).map(function(t){return t.parentNode}).filter(function(t,e,i){return i.indexOf(t)===e}).forEach(function(t){ge(t,t.childNodes),me(t)})}var be=/^\s*<(\w+|!)[^>]*>/,ke=/^<(\w+)\s*\/?>(?:<\/\1>)?$/;function Ce(t){var e=ke.exec(t);if(e)return document.createElement(e[1]);var i=document.createElement("div");return be.test(t)?i.insertAdjacentHTML("beforeend",t.trim()):i.textContent=t,1<i.childNodes.length?V(i.childNodes):i.firstChild}function Le(t,e){if(t&&1===t.nodeType)for(e(t),t=t.firstElementChild;t;)Le(t,e),t=t.nextElementSibling}function $e(t,e){return _(t)?Be(t)?F(Ce(t)):lt(t,e):F(t)}function Me(t,e){return _(t)?Be(t)?V(Ce(t)):ut(t,e):V(t)}function Be(t){return"<"===t[0]||t.match(/^\s*</)}function Ie(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];_e(t,e,"add")}function Se(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];_e(t,e,"remove")}function Ee(t,e){nt(t,"class",function(t){return(t||"").replace(new RegExp("\\b"+e+"\\b","g"),"")})}function Te(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];e[0]&&Se(t,e[0]),e[1]&&Ie(t,e[1])}function Ae(t,e){return e&&V(t).some(function(t){return t.classList.contains(e.split(" ")[0])})}function ze(t){for(var n=[],e=arguments.length-1;0<e--;)n[e]=arguments[e+1];if(n.length){var r=_((n=Ne(n))[n.length-1])?[]:n.pop();n=n.filter(Boolean),V(t).forEach(function(t){for(var e=t.classList,i=0;i<n.length;i++)He.Force?e.toggle.apply(e,[n[i]].concat(r)):e[(D(r)?!e.contains(n[i]):r)?"add":"remove"](n[i])})}}function _e(t,i,n){(i=Ne(i).filter(Boolean)).length&&V(t).forEach(function(t){var e=t.classList;He.Multiple?e[n].apply(e,i):i.forEach(function(t){return e[n](t)})})}function Ne(t){return t.reduce(function(t,e){return t.concat.call(t,_(e)&&y(e," ")?e.trim().split(" "):e)},[])}var He={get Multiple(){return this.get("_multiple")},get Force(){return this.get("_force")},get:function(t){if(!c(this,t)){var e=document.createElement("_").classList;e.add("a","b"),e.toggle("c",!1),this._multiple=e.contains("b"),this._force=!e.contains("c")}return this[t]}},Oe={"animation-iteration-count":!0,"column-count":!0,"fill-opacity":!0,"flex-grow":!0,"flex-shrink":!0,"font-weight":!0,"line-height":!0,opacity:!0,order:!0,orphans:!0,"stroke-dasharray":!0,"stroke-dashoffset":!0,widows:!0,"z-index":!0,zoom:!0};function De(t,e,r){return V(t).map(function(i){if(_(e)){if(e=We(e),D(r))return je(i,e);r||N(r)?i.style[e]=H(r)&&!Oe[e]?r+"px":r:i.style.removeProperty(e)}else{if(C(e)){var n=Pe(i);return e.reduce(function(t,e){return t[e]=n[We(e)],t},{})}$(e)&&X(e,function(t,e){return De(i,e,t)})}return i})[0]}function Pe(t,e){return(t=F(t)).ownerDocument.defaultView.getComputedStyle(t,e)}function je(t,e,i){return Pe(t,i)[e]}var Ze={};function Fe(t){var e=document.documentElement;if(!Gt)return Pe(e).getPropertyValue("--uk-"+t);if(!(t in Ze)){var i=fe(e,document.createElement("div"));Ie(i,"uk-"+t),Ze[t]=je(i,"content",":before").replace(/^["'](.*)["']$/,"$1"),me(i)}return Ze[t]}var Ve={};function We(t){var e=Ve[t];return e=e||(Ve[t]=function(t){t=d(t);var e=document.documentElement.style;if(t in e)return t;var i,n=qe.length;for(;n--;)if((i="-"+qe[n]+"-"+t)in e)return i}(t)||t)}var qe=["webkit","moz","ms"];function Re(t,s,a,h){return void 0===a&&(a=400),void 0===h&&(h="linear"),Wt.all(V(t).map(function(o){return new Wt(function(i,n){for(var t in s){var e=De(o,t);""===e&&De(o,t,e)}var r=setTimeout(function(){return Nt(o,"transitionend")},a);_t(o,"transitionend transitioncanceled",function(t){var e=t.type;clearTimeout(r),Se(o,"uk-transition"),De(o,{"transition-property":"","transition-duration":"","transition-timing-function":""}),"transitioncanceled"===e?n():i()},!1,function(t){var e=t.target;return o===e}),Ie(o,"uk-transition"),De(o,U({"transition-property":Object.keys(s).map(We).join(","),"transition-duration":a+"ms","transition-timing-function":h},s))})}))}var Ye={start:Re,stop:function(t){return Nt(t,"transitionend"),Wt.resolve()},cancel:function(t){Nt(t,"transitioncanceled")},inProgress:function(t){return Ae(t,"uk-transition")}},Ue="uk-animation-",Xe="uk-cancel-animation";function Ke(t,e,i,a,h){var c=arguments;return void 0===i&&(i=200),Wt.all(V(t).map(function(s){return new Wt(function(n,r){if(Ae(s,Xe))requestAnimationFrame(function(){return Wt.resolve().then(function(){return Ke.apply(void 0,c).then(n,r)})});else{var t=e+" "+Ue+(h?"leave":"enter");w(e,Ue)&&(a&&(t+=" uk-transform-origin-"+a),h&&(t+=" "+Ue+"reverse")),o(),_t(s,"animationend animationcancel",function(t){var e=t.type,i=!1;"animationcancel"===e?(r(),o()):(n(),Wt.resolve().then(function(){i=!0,o()})),requestAnimationFrame(function(){i||(Ie(s,Xe),requestAnimationFrame(function(){return Se(s,Xe)}))})},!1,function(t){var e=t.target;return s===e}),De(s,"animationDuration",i+"ms"),Ie(s,t)}function o(){De(s,"animationDuration",""),Ee(s,Ue+"\\S*")}})}))}var Ge=new RegExp(Ue+"(enter|leave)"),Je={in:function(t,e,i,n){return Ke(t,e,i,n,!1)},out:function(t,e,i,n){return Ke(t,e,i,n,!0)},inProgress:function(t){return Ge.test(nt(t,"class"))},cancel:function(t){Nt(t,"animationcancel")}},Qe={width:["x","left","right"],height:["y","top","bottom"]};function ti(t,e,l,u,d,i,n,r){l=ci(l),u=ci(u);var f={element:l,target:u};if(!t||!e)return f;var g=ii(t),p=ii(e),v=p;if(hi(v,l,g,-1),hi(v,u,p,1),d=li(d,g.width,g.height),i=li(i,p.width,p.height),d.x+=i.x,d.y+=i.y,v.left+=d.x,v.top+=d.y,n){var o=[ii(wi(t))];r&&o.unshift(ii(r)),X(Qe,function(t,s){var a=t[0],h=t[1],c=t[2];!0!==n&&!y(n,a)||o.some(function(n){var t=l[a]===h?-g[s]:l[a]===c?g[s]:0,e=u[a]===h?p[s]:u[a]===c?-p[s]:0;if(v[h]<n[h]||v[h]+g[s]>n[c]){var i=g[s]/2,r="center"===u[a]?-p[s]/2:0;return"center"===l[a]&&(o(i,r)||o(-i,-r))||o(t,e)}function o(e,t){var i=v[h]+e+t-2*d[a];if(i>=n[h]&&i+g[s]<=n[c])return v[h]=i,["element","target"].forEach(function(t){f[t][a]=e?f[t][a]===Qe[s][1]?Qe[s][2]:Qe[s][1]:f[t][a]}),!0}})})}return ei(t,v),f}function ei(i,n){if(i=F(i),!n)return ii(i);var r=ei(i),o=De(i,"position");["left","top"].forEach(function(t){if(t in n){var e=De(i,t);De(i,t,n[t]-r[t]+Z("absolute"===o&&"auto"===e?ni(i)[t]:e))}})}function ii(t){var e,i,n=wi(t=F(t)),r=n.pageYOffset,o=n.pageXOffset;if(B(t)){var s=t.innerHeight,a=t.innerWidth;return{top:r,left:o,height:s,width:a,bottom:r+s,right:o+a}}Bt(t)||"none"!==De(t,"display")||(e=nt(t,"style"),i=nt(t,"hidden"),nt(t,{style:(e||"")+";display:block !important;",hidden:null}));var h=t.getBoundingClientRect();return D(e)||nt(t,{style:e,hidden:i}),{height:h.height,width:h.width,top:h.top+r,left:h.left+o,bottom:h.bottom+r,right:h.right+o}}function ni(n){var r=(n=F(n)).offsetParent||function(t){return xi(t).documentElement}(n),o=ei(r),t=["top","left"].reduce(function(t,e){var i=g(e);return t[e]-=o[e]+Z(De(n,"margin"+i))+Z(De(r,"border"+i+"Width")),t},ei(n));return{top:t.top,left:t.left}}var ri=si("height"),oi=si("width");function si(n){var r=g(n);return function(t,e){if(t=F(t),D(e)){if(B(t))return t["inner"+r];if(I(t)){var i=t.documentElement;return Math.max(i["offset"+r],i["scroll"+r])}return(e="auto"===(e=De(t,n))?t["offset"+r]:Z(e)||0)-ai(n,t)}De(t,n,e||0===e?+e+ai(n,t)+"px":"")}}function ai(t,i,e){return void 0===e&&(e="border-box"),De(i,"boxSizing")===e?Qe[t].slice(1).map(g).reduce(function(t,e){return t+Z(De(i,"padding"+e))+Z(De(i,"border"+e+"Width"))},0):0}function hi(o,s,a,h){X(Qe,function(t,e){var i=t[0],n=t[1],r=t[2];s[i]===r?o[n]+=a[e]*h:"center"===s[i]&&(o[n]+=a[e]*h/2)})}function ci(t){var e=/left|center|right/,i=/top|center|bottom/;return 1===(t=(t||"").split(" ")).length&&(t=e.test(t[0])?t.concat(["center"]):i.test(t[0])?["center"].concat(t):["center","center"]),{x:e.test(t[0])?t[0]:"center",y:i.test(t[1])?t[1]:"center"}}function li(t,e,i){var n=(t||"").split(" "),r=n[0],o=n[1];return{x:r?Z(r)*(l(r,"%")?e/100:1):0,y:o?Z(o)*(l(o,"%")?i/100:1):0}}function ui(t){switch(t){case"left":return"right";case"right":return"left";case"top":return"bottom";case"bottom":return"top";default:return t}}function di(t,e,i){if(void 0===e&&(e=0),void 0===i&&(i=0),!Bt(t))return!1;var n=wi(t=F(t)),r=t.getBoundingClientRect(),o={top:-e,left:-i,bottom:e+ri(n),right:i+oi(n)};return tt(r,o)||et({x:r.left,y:r.top},o)}function fi(t,e){if(void 0===e&&(e=0),!Bt(t))return 0;var i=wi(t=F(t)),n=xi(t),r=t.offsetHeight+e,o=pi(t)[0],s=ri(i),a=s+Math.min(0,o-s),h=Math.max(0,s-(ri(n)+e-(o+r)));return J((a+i.pageYOffset-o)/((a+(r-(h<s?h:0)))/100)/100)}function gi(t,e){if(B(t=F(t))||I(t)){var i=wi(t);(0,i.scrollTo)(i.pageXOffset,e)}else t.scrollTop=e}function pi(t){var e=[0,0];do{if(e[0]+=t.offsetTop,e[1]+=t.offsetLeft,"fixed"===De(t,"position")){var i=wi(t);return e[0]+=i.pageYOffset,e[1]+=i.pageXOffset,e}}while(t=t.offsetParent);return e}function vi(t,e,i){return void 0===e&&(e="width"),void 0===i&&(i=window),H(t)?+t:l(t,"vh")?mi(ri(wi(i)),t):l(t,"vw")?mi(oi(wi(i)),t):l(t,"%")?mi(ii(i)[e],t):Z(t)}function mi(t,e){return t*Z(e)/100}function wi(t){return B(t)?t:xi(t).defaultView}function xi(t){return F(t).ownerDocument}var yi={reads:[],writes:[],read:function(t){return this.reads.push(t),ki(),t},write:function(t){return this.writes.push(t),ki(),t},clear:function(t){return Li(this.reads,t)||Li(this.writes,t)},flush:bi};function bi(){Ci(yi.reads),Ci(yi.writes.splice(0,yi.writes.length)),yi.scheduled=!1,(yi.reads.length||yi.writes.length)&&ki(!0)}function ki(t){void 0===t&&(t=!1),yi.scheduled||(yi.scheduled=!0,t?Wt.resolve().then(bi):requestAnimationFrame(bi))}function Ci(t){for(var e;e=t.shift();)e()}function Li(t,e){var i=t.indexOf(e);return!!~i&&!!t.splice(i,1)}function $i(){}function Mi(t,e){return(e.y-t.y)/(e.x-t.x)}$i.prototype={positions:[],position:null,init:function(){var n=this;this.positions=[],this.position=null;var r=!1;this.unbind=At(document,"mousemove",function(i){r||(setTimeout(function(){var t=Date.now(),e=n.positions.length;e&&100<t-n.positions[e-1].time&&n.positions.splice(0,e),n.positions.push({time:t,x:i.pageX,y:i.pageY}),5<n.positions.length&&n.positions.shift(),r=!1},5),r=!0)})},cancel:function(){this.unbind&&this.unbind()},movesTo:function(t){if(this.positions.length<2)return!1;var e=ei(t),i=this.positions[this.positions.length-1],n=this.positions[0];if(e.left<=i.x&&i.x<=e.right&&e.top<=i.y&&i.y<=e.bottom)return!1;var r=[[{x:e.left,y:e.top},{x:e.right,y:e.bottom}],[{x:e.right,y:e.top},{x:e.left,y:e.bottom}]];return e.right<=i.x||(e.left>=i.x?(r[0].reverse(),r[1].reverse()):e.bottom<=i.y?r[0].reverse():e.top>=i.y&&r[1].reverse()),!!r.reduce(function(t,e){return t+(Mi(n,e[0])<Mi(i,e[0])&&Mi(n,e[1])>Mi(i,e[1]))},0)}};var Bi={};function Ii(t,e,i){return Bi.computed(L(t)?t.call(i,i):t,L(e)?e.call(i,i):e)}function Si(t,e){return t=t&&!C(t)?[t]:t,e?t?t.concat(e):C(e)?e:[e]:t}function Ei(e,i,n){var r={};if(L(i)&&(i=i.options),i.extends&&(e=Ei(e,i.extends,n)),i.mixins)for(var t=0,o=i.mixins.length;t<o;t++)e=Ei(e,i.mixins[t],n);for(var s in e)h(s);for(var a in i)c(e,a)||h(a);function h(t){r[t]=(Bi[t]||function(t,e){return D(e)?t:e})(e[t],i[t],n)}return r}function Ti(t,e){var i;void 0===e&&(e=[]);try{return t?w(t,"{")?JSON.parse(t):e.length&&!y(t,":")?((i={})[e[0]]=t,i):t.split(";").reduce(function(t,e){var i=e.split(/:(.*)/),n=i[0],r=i[1];return n&&!D(r)&&(t[n.trim()]=r.trim()),t},{}):{}}catch(t){return{}}}Bi.events=Bi.created=Bi.beforeConnect=Bi.connected=Bi.beforeDisconnect=Bi.disconnected=Bi.destroy=Si,Bi.args=function(t,e){return!1!==e&&Si(e||t)},Bi.update=function(t,e){return K(Si(t,L(e)?{read:e}:e),"order")},Bi.props=function(t,e){return C(e)&&(e=e.reduce(function(t,e){return t[e]=String,t},{})),Bi.methods(t,e)},Bi.computed=Bi.methods=function(t,e){return e?t?U({},t,e):e:t},Bi.data=function(e,i,t){return t?Ii(e,i,t):i?e?function(t){return Ii(e,i,t)}:i:e};function Ai(t){this.id=++zi,this.el=F(t)}var zi=0;function _i(t,e){try{t.contentWindow.postMessage(JSON.stringify(U({event:"command"},e)),"*")}catch(t){}}Ai.prototype.isVideo=function(){return this.isYoutube()||this.isVimeo()||this.isHTML5()},Ai.prototype.isHTML5=function(){return"VIDEO"===this.el.tagName},Ai.prototype.isIFrame=function(){return"IFRAME"===this.el.tagName},Ai.prototype.isYoutube=function(){return this.isIFrame()&&!!this.el.src.match(/\/\/.*?youtube(-nocookie)?\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/)},Ai.prototype.isVimeo=function(){return this.isIFrame()&&!!this.el.src.match(/vimeo\.com\/video\/.*/)},Ai.prototype.enableApi=function(){var e=this;if(this.ready)return this.ready;var i,n=this.isYoutube(),r=this.isVimeo();return n||r?this.ready=new Wt(function(t){_t(e.el,"load",function(){if(n){var t=function(){return _i(e.el,{event:"listening",id:e.id})};i=setInterval(t,100),t()}}),function(n){return new Wt(function(i){_t(window,"message",function(t,e){return i(e)},!1,function(t){var e=t.data;if(e&&_(e)){try{e=JSON.parse(e)}catch(t){return}return e&&n(e)}})})}(function(t){return n&&t.id===e.id&&"onReady"===t.event||r&&Number(t.player_id)===e.id}).then(function(){t(),i&&clearInterval(i)}),nt(e.el,"src",e.el.src+(y(e.el.src,"?")?"&":"?")+(n?"enablejsapi=1":"api=1&player_id="+e.id))}):Wt.resolve()},Ai.prototype.play=function(){var t=this;if(this.isVideo())if(this.isIFrame())this.enableApi().then(function(){return _i(t.el,{func:"playVideo",method:"play"})});else if(this.isHTML5())try{var e=this.el.play();e&&e.catch(Q)}catch(t){}},Ai.prototype.pause=function(){var t=this;this.isVideo()&&(this.isIFrame()?this.enableApi().then(function(){return _i(t.el,{func:"pauseVideo",method:"pause"})}):this.isHTML5()&&this.el.pause())},Ai.prototype.mute=function(){var t=this;this.isVideo()&&(this.isIFrame()?this.enableApi().then(function(){return _i(t.el,{func:"mute",method:"setVolume",value:0})}):this.isHTML5()&&(this.el.muted=!0,nt(this.el,"muted","")))};var Ni="IntersectionObserver"in window?window.IntersectionObserver:function(){function t(e,t){var i=this;void 0===t&&(t={});var n=t.rootMargin;void 0===n&&(n="0 0"),this.targets=[];var r,o=(n||"0 0").split(" ").map(Z),s=o[0],a=o[1];this.offsetTop=s,this.offsetLeft=a,this.apply=function(){r=r||requestAnimationFrame(function(){return setTimeout(function(){var t=i.takeRecords();t.length&&e(t,i),r=!1})})},this.off=At(window,"scroll resize load",this.apply,{passive:!0,capture:!0})}return t.prototype.takeRecords=function(){var i=this;return this.targets.filter(function(t){var e=di(t.target,i.offsetTop,i.offsetLeft);if(null===t.isIntersecting||e^t.isIntersecting)return t.isIntersecting=e,!0})},t.prototype.observe=function(t){this.targets.push({target:t,isIntersecting:null}),this.apply()},t.prototype.disconnect=function(){this.targets=[],this.off()},t}();function Hi(t){return!(!w(t,"uk-")&&!w(t,"data-uk-"))&&f(t.replace("data-uk-","").replace("uk-",""))}function Oi(t){this._init(t)}var Di,Pi,ji,Zi,Fi,Vi,Wi,qi,Ri;function Yi(t,e){if(t)for(var i in t)t[i]._connected&&t[i]._callUpdate(e)}function Ui(t,e){var i={},n=t.args;void 0===n&&(n=[]);var r=t.props;void 0===r&&(r={});var o=t.el;if(!r)return i;for(var s in r){var a=d(s),h=st(o,a);if(!D(h)){if(h=r[s]===Boolean&&""===h||Ji(r[s],h),"target"===a&&(!h||w(h,"_")))continue;i[s]=h}}var c=Ti(st(o,e),n);for(var l in c){var u=f(l);void 0!==r[u]&&(i[u]=Ji(r[u],c[l]))}return i}function Xi(n,r,o){Object.defineProperty(n,r,{enumerable:!0,get:function(){var t=n._computeds,e=n.$props,i=n.$el;return c(t,r)||(t[r]=(o.get||o).call(n,e,i)),t[r]},set:function(t){var e=n._computeds;e[r]=o.set?o.set.call(n,t):t,D(e[r])&&delete e[r]}})}function Ki(e,i,n){M(i)||(i={name:n,handler:i});var t=i.name,r=i.el,o=i.handler,s=i.capture,a=i.passive,h=i.delegate,c=i.filter,l=i.self;r=L(r)?r.call(e):r||e.$el,C(r)?r.forEach(function(t){return Ki(e,U({},i,{el:t}),n)}):!r||c&&!c.call(e)||(o=function(e){return function(t){return C(t.detail)?e.apply(void 0,[t].concat(t.detail)):e(t)}}(_(o)?e[o]:u(o,e)),l&&(o=function(e){return function(t){if(t.target===t.currentTarget||t.target===t.current)return e.call(null,t)}}(o)),e._events.push(At(r,t,h?_(h)?h:h.call(e):null,o,z(a)?{passive:a,capture:s}:s)))}function Gi(t,e){return t.every(function(t){return!t||!c(t,e)})}function Ji(t,e){return t===Boolean?P(e):t===Number?j(e):"list"===t?W(e):t?t(e):e}Oi.util=Object.freeze({ajax:Xt,getImage:Kt,transition:Re,Transition:Ye,animate:Ke,Animation:Je,attr:nt,hasAttr:rt,removeAttr:ot,data:st,addClass:Ie,removeClass:Se,removeClasses:Ee,replaceClass:Te,hasClass:Ae,toggleClass:ze,positionAt:ti,offset:ei,position:ni,height:ri,width:oi,boxModelAdjust:ai,flipPosition:ui,isInView:di,scrolledOver:fi,scrollTop:gi,offsetPosition:pi,toPx:vi,ready:he,index:ce,getIndex:le,empty:ue,html:de,prepend:function(e,t){return(e=$e(e)).hasChildNodes()?ve(t,function(t){return e.insertBefore(t,e.firstChild)}):fe(e,t)},append:fe,before:ge,after:pe,remove:me,wrapAll:we,wrapInner:xe,unwrap:ye,fragment:Ce,apply:Le,$:$e,$$:Me,isIE:Gt,isRtl:Jt,hasTouch:ee,pointerDown:ie,pointerMove:ne,pointerUp:re,pointerEnter:oe,pointerLeave:se,pointerCancel:ae,on:At,off:zt,once:_t,trigger:Nt,createEvent:Ht,toEventTargets:jt,isTouch:Zt,getEventPos:Ft,fastdom:yi,isVoidElement:Mt,isVisible:Bt,selInput:It,isInput:St,filter:Et,within:Tt,bind:u,hasOwn:c,hyphenate:d,camelize:f,ucfirst:g,startsWith:w,endsWith:l,includes:y,findIndex:k,isArray:C,isFunction:L,isObject:$,isPlainObject:M,isWindow:B,isDocument:I,isJQuery:S,isNode:E,isNodeCollection:A,isBoolean:z,isString:_,isNumber:N,isNumeric:H,isEmpty:O,isUndefined:D,toBoolean:P,toNumber:j,toFloat:Z,toNode:F,toNodes:V,toList:W,toMs:q,isEqual:R,swap:Y,assign:U,each:X,sortBy:K,uniqueBy:G,clamp:J,noop:Q,intersectRect:tt,pointInRect:et,Dimensions:it,MouseTracker:$i,mergeOptions:Ei,parseOptions:Ti,Player:Ai,Promise:Wt,Deferred:Vt,IntersectionObserver:Ni,query:at,queryAll:ht,find:lt,findAll:ut,matches:xt,closest:bt,parents:kt,escape:Lt,css:De,getStyles:Pe,getStyle:je,getCssVar:Fe,propName:We}),Oi.data="__uikit__",Oi.prefix="uk-",Oi.options={},ji=(Di=Oi).data,Di.use=function(t){if(!t.installed)return t.call(null,this),t.installed=!0,this},Di.mixin=function(t,e){(e=(_(e)?Di.component(e):e)||this).options=Ei(e.options,t)},Di.extend=function(t){function e(t){this._init(t)}return t=t||{},((e.prototype=Object.create(this.prototype)).constructor=e).options=Ei(this.options,t),e.super=this,e.extend=this.extend,e},Di.update=function(t,e){(function t(e,i){e&&e!==document.body&&e.parentNode&&(t(e.parentNode,i),i(e.parentNode))})(t=t?F(t):document.body,function(t){return Yi(t[ji],e)}),Le(t,function(t){return Yi(t[ji],e)})},Object.defineProperty(Di,"container",{get:function(){return Pi||document.body},set:function(t){Pi=$e(t)}}),(Zi=Oi).prototype._callHook=function(t){var e=this,i=this.$options[t];i&&i.forEach(function(t){return t.call(e)})},Zi.prototype._callConnected=function(){this._connected||(this._data={},this._computeds={},this._initProps(),this._callHook("beforeConnect"),this._connected=!0,this._initEvents(),this._initObserver(),this._callHook("connected"),this._callUpdate())},Zi.prototype._callDisconnected=function(){this._connected&&(this._callHook("beforeDisconnect"),this._observer&&(this._observer.disconnect(),this._observer=null),this._unbindEvents(),this._callHook("disconnected"),this._connected=!1)},Zi.prototype._callUpdate=function(t){var o=this;void 0===t&&(t="update");var s=t.type||t;y(["update","resize"],s)&&this._callWatches();var e=this.$options.update,i=this._frames,a=i.reads,h=i.writes;e&&e.forEach(function(t,e){var i=t.read,n=t.write,r=t.events;"update"!==s&&!y(r,s)||(i&&!y(yi.reads,a[e])&&(a[e]=yi.read(function(){var t=o._connected&&i.call(o,o._data,s);!1===t&&n?yi.clear(h[e]):M(t)&&U(o._data,t)})),n&&!y(yi.writes,h[e])&&(h[e]=yi.write(function(){return o._connected&&n.call(o,o._data,s)})))})},Vi=0,(Fi=Oi).prototype._init=function(t){(t=t||{}).data=function(t,e){var i=t.data,n=(t.el,e.args),r=e.props;if(void 0===r&&(r={}),i=C(i)?O(n)?void 0:i.slice(0,n.length).reduce(function(t,e,i){return M(e)?U(t,e):t[n[i]]=e,t},{}):i)for(var o in i)D(i[o])?delete i[o]:i[o]=r[o]?Ji(r[o],i[o]):i[o];return i}(t,this.constructor.options),this.$options=Ei(this.constructor.options,t,this),this.$el=null,this.$props={},this._frames={reads:{},writes:{}},this._events=[],this._uid=Vi++,this._initData(),this._initMethods(),this._initComputeds(),this._callHook("created"),t.el&&this.$mount(t.el)},Fi.prototype._initData=function(){var t=this.$options.data;for(var e in void 0===t&&(t={}),t)this.$props[e]=this[e]=t[e]},Fi.prototype._initMethods=function(){var t=this.$options.methods;if(t)for(var e in t)this[e]=u(t[e],this)},Fi.prototype._initComputeds=function(){var t=this.$options.computed;if(this._computeds={},t)for(var e in t)Xi(this,e,t[e])},Fi.prototype._callWatches=function(){var t=this.$options.computed,e=this._computeds;for(var i in e){var n=e[i];delete e[i],t[i].watch&&!R(n,this[i])&&t[i].watch.call(this,this[i],n)}},Fi.prototype._initProps=function(t){var e;for(e in t=t||Ui(this.$options,this.$name))D(t[e])||(this.$props[e]=t[e]);var i=[this.$options.computed,this.$options.methods];for(e in this.$props)e in t&&Gi(i,e)&&(this[e]=this.$props[e])},Fi.prototype._initEvents=function(){var i=this,t=this.$options.events;t&&t.forEach(function(t){if(c(t,"handler"))Ki(i,t);else for(var e in t)Ki(i,t[e],e)})},Fi.prototype._unbindEvents=function(){this._events.forEach(function(t){return t()}),this._events=[]},Fi.prototype._initObserver=function(){var i=this,t=this.$options,n=t.attrs,e=t.props,r=t.el;if(!this._observer&&e&&!1!==n){n=C(n)?n:Object.keys(e),this._observer=new MutationObserver(function(){var e=Ui(i.$options,i.$name);n.some(function(t){return!D(e[t])&&e[t]!==i.$props[t]})&&i.$reset()});var o=n.map(function(t){return d(t)}).concat(this.$name);this._observer.observe(r,{attributes:!0,attributeFilter:o.concat(o.map(function(t){return"data-"+t}))})}},qi=(Wi=Oi).data,Ri={},Wi.component=function(s,t){if(!t)return M(Ri[s])&&(Ri[s]=Wi.extend(Ri[s])),Ri[s];Wi[s]=function(t,i){for(var e=arguments.length,n=Array(e);e--;)n[e]=arguments[e];var r=Wi.component(s);return M(t)?new r({data:t}):r.options.functional?new r({data:[].concat(n)}):t&&t.nodeType?o(t):Me(t).map(o)[0];function o(t){var e=Wi.getComponent(t,s);if(e){if(!i)return e;e.$destroy()}return new r({el:t,data:i})}};var e=M(t)?U({},t):t.options;if(e.name=s,e.install&&e.install(Wi,e,s),Wi._initialized&&!e.functional){var i=d(s);yi.read(function(){return Wi[s]("[uk-"+i+"],[data-uk-"+i+"]")})}return Ri[s]=M(t)?e:t},Wi.getComponents=function(t){return t&&t[qi]||{}},Wi.getComponent=function(t,e){return Wi.getComponents(t)[e]},Wi.connect=function(t){if(t[qi])for(var e in t[qi])t[qi][e]._callConnected();for(var i=0;i<t.attributes.length;i++){var n=Hi(t.attributes[i].name);n&&n in Ri&&Wi[n](t)}},Wi.disconnect=function(t){for(var e in t[qi])t[qi][e]._callDisconnected()},function(n){var r=n.data;n.prototype.$mount=function(t){var e=this.$options.name;t[r]||(t[r]={}),t[r][e]||((t[r][e]=this).$el=this.$options.el=this.$options.el||t,Tt(t,document)&&this._callConnected())},n.prototype.$emit=function(t){this._callUpdate(t)},n.prototype.$reset=function(){this._callDisconnected(),this._callConnected()},n.prototype.$destroy=function(t){void 0===t&&(t=!1);var e=this.$options,i=e.el,n=e.name;i&&this._callDisconnected(),this._callHook("destroy"),i&&i[r]&&(delete i[r][n],O(i[r])||delete i[r],t&&me(this.$el))},n.prototype.$create=function(t,e,i){return n[t](e,i)},n.prototype.$update=n.update,n.prototype.$getComponent=n.getComponent;var e={};Object.defineProperties(n.prototype,{$container:Object.getOwnPropertyDescriptor(n,"container"),$name:{get:function(){var t=this.$options.name;return e[t]||(e[t]=n.prefix+d(t)),e[t]}}})}(Oi);var Qi={connected:function(){Ae(this.$el,this.$name)||Ie(this.$el,this.$name)}},tn={props:{cls:Boolean,animation:"list",duration:Number,origin:String,transition:String,queued:Boolean},data:{cls:!1,animation:[!1],duration:200,origin:!1,transition:"linear",queued:!1,initProps:{overflow:"",height:"",paddingTop:"",paddingBottom:"",marginTop:"",marginBottom:""},hideProps:{overflow:"hidden",height:0,paddingTop:0,paddingBottom:0,marginTop:0,marginBottom:0}},computed:{hasAnimation:function(t){return!!t.animation[0]},hasTransition:function(t){var e=t.animation;return this.hasAnimation&&!0===e[0]}},methods:{toggleElement:function(c,l,u){var d=this;return new Wt(function(t){c=V(c);function e(t){return Wt.all(t.map(function(t){return d._toggleElement(t,l,u)}))}var i,n=c.filter(function(t){return d.isToggled(t)}),r=c.filter(function(t){return!y(n,t)});if(d.queued&&D(u)&&D(l)&&d.hasAnimation&&!(c.length<2)){var o=document.body,s=o.scrollTop,a=n[0],h=Je.inProgress(a)&&Ae(a,"uk-animation-leave")||Ye.inProgress(a)&&"0px"===a.style.height;i=e(n),h||(i=i.then(function(){var t=e(r);return o.scrollTop=s,t}))}else i=e(r.concat(n));i.then(t,Q)})},toggleNow:function(e,i){var n=this;return new Wt(function(t){return Wt.all(V(e).map(function(t){return n._toggleElement(t,i,!1)})).then(t,Q)})},isToggled:function(t){var e=V(t||this.$el);return this.cls?Ae(e,this.cls.split(" ")[0]):!rt(e,"hidden")},updateAria:function(t){!1===this.cls&&nt(t,"aria-hidden",!this.isToggled(t))},_toggleElement:function(t,e,i){var n=this;if(e=z(e)?e:Je.inProgress(t)?Ae(t,"uk-animation-leave"):Ye.inProgress(t)?"0px"===t.style.height:!this.isToggled(t),!Nt(t,"before"+(e?"show":"hide"),[this]))return Wt.reject();var r=(L(i)?i:!1!==i&&this.hasAnimation?this.hasTransition?function(t){var s=t.isToggled,a=t.duration,h=t.initProps,c=t.hideProps,l=t.transition,u=t._toggle;return function(t,e){var i=Ye.inProgress(t),n=t.hasChildNodes?Z(De(t.firstElementChild,"marginTop"))+Z(De(t.lastElementChild,"marginBottom")):0,r=Bt(t)?ri(t)+(i?0:n):0;Ye.cancel(t),s(t)||u(t,!0),ri(t,""),yi.flush();var o=ri(t)+(i?0:n);return ri(t,r),(e?Ye.start(t,U({},h,{overflow:"hidden",height:o}),Math.round(a*(1-r/o)),l):Ye.start(t,c,Math.round(a*(r/o)),l).then(function(){return u(t,!1)})).then(function(){return De(t,h)})}}(this):function(t){var i=t.animation,n=t.duration,r=t.origin,o=t._toggle;return function(t,e){return Je.cancel(t),e?(o(t,!0),Je.in(t,i[0],n,r)):Je.out(t,i[1]||i[0],n,r).then(function(){return o(t,!1)})}}(this):this._toggle)(t,e);Nt(t,e?"show":"hide",[this]);function o(){Nt(t,e?"shown":"hidden",[n]),n.$update(t)}return r?r.then(o):Wt.resolve(o())},_toggle:function(t,e){var i;t&&(e=Boolean(e),this.cls?(i=y(this.cls," ")||e!==Ae(t,this.cls))&&ze(t,this.cls,y(this.cls," ")?void 0:e):(i=e===rt(t,"hidden"))&&nt(t,"hidden",e?null:""),Me("[autofocus]",t).some(function(t){return Bt(t)?t.focus()||!0:t.blur()}),this.updateAria(t),i&&this.$update(t))}}};var en={mixins:[Qi,tn],props:{targets:String,active:null,collapsible:Boolean,multiple:Boolean,toggle:String,content:String,transition:String},data:{targets:"> *",active:!1,animation:[!0],collapsible:!0,multiple:!1,clsOpen:"uk-open",toggle:"> .uk-accordion-title",content:"> .uk-accordion-content",transition:"ease"},computed:{items:function(t,e){return Me(t.targets,e)}},events:[{name:"click",delegate:function(){return this.targets+" "+this.$props.toggle},handler:function(t){t.preventDefault(),this.toggle(ce(Me(this.targets+" "+this.$props.toggle,this.$el),t.current))}}],connected:function(){if(!1!==this.active){var t=this.items[Number(this.active)];t&&!Ae(t,this.clsOpen)&&this.toggle(t,!1)}},update:function(){var e=this;this.items.forEach(function(t){return e._toggle($e(e.content,t),Ae(t,e.clsOpen))});var t=!this.collapsible&&!Ae(this.items,this.clsOpen)&&this.items[0];t&&this.toggle(t,!1)},methods:{toggle:function(r,o){var s=this,t=le(r,this.items),a=Et(this.items,"."+this.clsOpen);(r=this.items[t])&&[r].concat(!this.multiple&&!y(a,r)&&a||[]).forEach(function(t){var e=t===r,i=e&&!Ae(t,s.clsOpen);if(i||!e||s.collapsible||!(a.length<2)){ze(t,s.clsOpen,i);var n=t._wrapper?t._wrapper.firstElementChild:$e(s.content,t);t._wrapper||(t._wrapper=we(n,"<div>"),nt(t._wrapper,"hidden",i?"":null)),s._toggle(n,!0),s.toggleElement(t._wrapper,i,o).then(function(){Ae(t,s.clsOpen)===i&&(i||s._toggle(n,!1),t._wrapper=null,ye(n))})}})}}},nn={mixins:[Qi,tn],args:"animation",props:{close:String},data:{animation:[!0],selClose:".uk-alert-close",duration:150,hideProps:U({opacity:0},tn.data.hideProps)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(t){t.preventDefault(),this.close()}}],methods:{close:function(){var t=this;this.toggleElement(this.$el).then(function(){return t.$destroy(!0)})}}};function rn(r){he(function(){var i;r.update(),At(window,"load resize",function(){return r.update(null,"resize")}),At(document,"loadedmetadata load",function(t){var e=t.target;return r.update(e,"resize")},!0),At(window,"scroll",function(t){if(!i){i=!0,yi.write(function(){return i=!1});var e=t.target;r.update(1!==e.nodeType?document.body:e,t.type)}},{passive:!0,capture:!0});var e,n=0;At(document,"animationstart",function(t){var e=t.target;(De(e,"animationName")||"").match(/^uk-.*(left|right)/)&&(n++,De(document.body,"overflowX","hidden"),setTimeout(function(){--n||De(document.body,"overflowX","")},q(De(e,"animationDuration"))+100))},!0),At(document,ie,function(t){if(e&&e(),Zt(t)){var r=Ft(t),o="tagName"in t.target?t.target:t.target.parentNode;e=_t(document,re+" "+ae,function(t){var e=Ft(t),i=e.x,n=e.y;(o&&i&&100<Math.abs(r.x-i)||n&&100<Math.abs(r.y-n))&&setTimeout(function(){Nt(o,"swipe"),Nt(o,"swipe"+function(t,e,i,n){return Math.abs(t-i)>=Math.abs(e-n)?0<t-i?"Left":"Right":0<e-n?"Up":"Down"}(r.x,r.y,i,n))})})}},{passive:!0})})}var on,sn,an={args:"autoplay",props:{automute:Boolean,autoplay:Boolean},data:{automute:!1,autoplay:!0},computed:{inView:function(t){return"inview"===t.autoplay}},connected:function(){this.inView&&!rt(this.$el,"preload")&&(this.$el.preload="none"),this.player=new Ai(this.$el),this.automute&&this.player.mute()},update:{read:function(){return!!this.player&&{visible:Bt(this.$el)&&"hidden"!==De(this.$el,"visibility"),inView:this.inView&&di(this.$el)}},write:function(t){var e=t.visible,i=t.inView;!e||this.inView&&!i?this.player.pause():(!0===this.autoplay||this.inView&&i)&&this.player.play()},events:["resize","scroll"]}},hn={mixins:[Qi,an],props:{width:Number,height:Number},data:{automute:!0},update:{read:function(){var t=this.$el;if(!Bt(t))return!1;var e=t.parentNode;return{height:e.offsetHeight,width:e.offsetWidth}},write:function(t){var e=t.height,i=t.width,n=this.$el,r=this.width||n.naturalWidth||n.videoWidth||n.clientWidth,o=this.height||n.naturalHeight||n.videoHeight||n.clientHeight;r&&o&&De(n,it.cover({width:r,height:o},{width:i+(i%2?1:0),height:e+(e%2?1:0)}))},events:["resize"]}},cn={props:{pos:String,offset:null,flip:Boolean,clsPos:String},data:{pos:"bottom-"+(Jt?"right":"left"),flip:!0,offset:!1,clsPos:""},computed:{pos:function(t){var e=t.pos;return(e+(y(e,"-")?"":"-center")).split("-")},dir:function(){return this.pos[0]},align:function(){return this.pos[1]}},methods:{positionAt:function(t,e,i){var n;Ee(t,this.clsPos+"-(top|bottom|left|right)(-[a-z]+)?"),De(t,{top:"",left:""});var r=this.offset,o=this.getAxis();H(r)||(r=(n=$e(r))?ei(n)["x"===o?"left":"top"]-ei(e)["x"===o?"right":"bottom"]:0);var s=ti(t,e,"x"===o?ui(this.dir)+" "+this.align:this.align+" "+ui(this.dir),"x"===o?this.dir+" "+this.align:this.align+" "+this.dir,"x"===o?""+("left"===this.dir?-r:r):" "+("top"===this.dir?-r:r),null,this.flip,i).target,a=s.x,h=s.y;this.dir="x"===o?a:h,this.align="x"===o?h:a,ze(t,this.clsPos+"-"+this.dir+"-"+this.align,!1===this.offset)},getAxis:function(){return"top"===this.dir||"bottom"===this.dir?"y":"x"}}},ln={mixins:[cn,tn],args:"pos",props:{mode:"list",toggle:Boolean,boundary:Boolean,boundaryAlign:Boolean,delayShow:Number,delayHide:Number,clsDrop:String},data:{mode:["click","hover"],toggle:"- *",boundary:window,boundaryAlign:!1,delayShow:0,delayHide:800,clsDrop:!1,hoverIdle:200,animation:["uk-animation-fade"],cls:"uk-open"},computed:{boundary:function(t,e){return at(t.boundary,e)},clsDrop:function(t){return t.clsDrop||"uk-"+this.$options.name},clsPos:function(){return this.clsDrop}},created:function(){this.tracker=new $i},connected:function(){Ie(this.$el,this.clsDrop);var t=this.$props.toggle;this.toggle=t&&this.$create("toggle",at(t,this.$el),{target:this.$el,mode:this.mode}),this.toggle||Nt(this.$el,"updatearia")},events:[{name:"click",delegate:function(){return"."+this.clsDrop+"-close"},handler:function(t){t.preventDefault(),this.hide(!1)}},{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(t){var e=t.target.hash;e||t.preventDefault(),e&&Tt(e,this.$el)||this.hide(!1)}},{name:"beforescroll",handler:function(){this.hide(!1)}},{name:"toggle",self:!0,handler:function(t,e){t.preventDefault(),this.isToggled()?this.hide(!1):this.show(e,!1)}},{name:oe,filter:function(){return y(this.mode,"hover")},handler:function(t){Zt(t)||(on&&on!==this&&on.toggle&&y(on.toggle.mode,"hover")&&!Tt(t.target,on.toggle.$el)&&!et({x:t.pageX,y:t.pageY},ei(on.$el))&&on.hide(!1),t.preventDefault(),this.show(this.toggle))}},{name:"toggleshow",handler:function(t,e){e&&!y(e.target,this.$el)||(t.preventDefault(),this.show(e||this.toggle))}},{name:"togglehide "+se,handler:function(t,e){Zt(t)||e&&!y(e.target,this.$el)||(t.preventDefault(),this.toggle&&y(this.toggle.mode,"hover")&&this.hide())}},{name:"beforeshow",self:!0,handler:function(){this.clearTimers(),Je.cancel(this.$el),this.position()}},{name:"show",self:!0,handler:function(){this.tracker.init(),Nt(this.$el,"updatearia"),function(){if(sn)return;sn=!0,At(document,re,function(t){var e,i=t.target;if(!t.defaultPrevented)for(;on&&on!==e&&!Tt(i,on.$el)&&(!on.toggle||!Tt(i,on.toggle.$el));)(e=on).hide(!1)})}()}},{name:"beforehide",self:!0,handler:function(){this.clearTimers()}},{name:"hide",handler:function(t){var e=t.target;this.$el===e?(on=this.isActive()?null:on,Nt(this.$el,"updatearia"),this.tracker.cancel()):on=null===on&&Tt(e,this.$el)&&this.isToggled()?this:on}},{name:"updatearia",self:!0,handler:function(t,e){t.preventDefault(),this.updateAria(this.$el),(e||this.toggle)&&(nt((e||this.toggle).$el,"aria-expanded",this.isToggled()?"true":"false"),ze(this.toggle.$el,this.cls,this.isToggled()))}}],update:{write:function(){this.isToggled()&&!Je.inProgress(this.$el)&&this.position()},events:["resize"]},methods:{show:function(e,i){var n=this;void 0===i&&(i=!0);function r(){return!n.isToggled()&&n.toggleElement(n.$el,!0)}function t(){if(n.toggle=e||n.toggle,n.clearTimers(),!n.isActive())if(i&&on&&on!==n&&on.isDelaying)n.showTimer=setTimeout(n.show,10);else{if(n.isParentOf(on)){if(!on.hideTimer)return;on.hide(!1)}else if(on&&n.isChildOf(on))on.clearTimers();else if(on&&!n.isChildOf(on)&&!n.isParentOf(on))for(var t;on&&on!==t&&!n.isChildOf(on);)(t=on).hide(!1);i&&n.delayShow?n.showTimer=setTimeout(r,n.delayShow):r(),on=n}}e&&this.toggle&&e.$el!==this.toggle.$el?(_t(this.$el,"hide",t),this.hide(!1)):t()},hide:function(t){var e=this;void 0===t&&(t=!0);function i(){return e.toggleNow(e.$el,!1)}this.clearTimers(),this.isDelaying=this.tracker.movesTo(this.$el),t&&this.isDelaying?this.hideTimer=setTimeout(this.hide,this.hoverIdle):t&&this.delayHide?this.hideTimer=setTimeout(i,this.delayHide):i()},clearTimers:function(){clearTimeout(this.showTimer),clearTimeout(this.hideTimer),this.showTimer=null,this.hideTimer=null,this.isDelaying=!1},isActive:function(){return on===this},isChildOf:function(t){return t&&t!==this&&Tt(this.$el,t.$el)},isParentOf:function(t){return t&&t!==this&&Tt(t.$el,this.$el)},position:function(){Ee(this.$el,this.clsDrop+"-(stack|boundary)"),De(this.$el,{top:"",left:"",display:"block"}),ze(this.$el,this.clsDrop+"-boundary",this.boundaryAlign);var t=ei(this.boundary),e=this.boundaryAlign?t:ei(this.toggle.$el);if("justify"===this.align){var i="y"===this.getAxis()?"width":"height";De(this.$el,i,e[i])}else this.$el.offsetWidth>Math.max(t.right-e.left,e.right-t.left)&&Ie(this.$el,this.clsDrop+"-stack");this.positionAt(this.$el,this.boundaryAlign?this.boundary:this.toggle.$el,this.boundary),De(this.$el,"display","")}}};var un={extends:ln},dn={mixins:[Qi],args:"target",props:{target:Boolean},data:{target:!1},computed:{input:function(t,e){return $e(It,e)},state:function(){return this.input.nextElementSibling},target:function(t,e){var i=t.target;return i&&(!0===i&&this.input.parentNode===e&&this.input.nextElementSibling||at(i,e))}},update:function(){var t=this.target,e=this.input;if(t){var i,n=St(t)?"value":"textContent",r=t[n],o=e.files&&e.files[0]?e.files[0].name:xt(e,"select")&&(i=Me("option",e).filter(function(t){return t.selected})[0])?i.textContent:e.value;r!==o&&(t[n]=o)}},events:[{name:"change",handler:function(){this.$emit()}},{name:"reset",el:function(){return bt(this.$el,"form")},handler:function(){this.$emit()}}]},fn={update:{read:function(t){var e=di(this.$el);if(!e||t.isInView===e)return!1;t.isInView=e},write:function(){this.$el.src=this.$el.src},events:["scroll","resize"]}},gn={props:{margin:String,firstColumn:Boolean},data:{margin:"uk-margin-small-top",firstColumn:"uk-first-column"},update:{read:function(t){var e=this.$el.children;if(!e.length||!Bt(this.$el))return t.rows=[[]];t.rows=pn(e),t.stacks=!t.rows.some(function(t){return 1<t.length})},write:function(t){var n=this;t.rows.forEach(function(t,i){return t.forEach(function(t,e){ze(t,n.margin,0!==i),ze(t,n.firstColumn,0===e)})})},events:["resize"]}};function pn(t){for(var e=[[]],i=0;i<t.length;i++){var n=t[i],r=vn(n);if(r.height)for(var o=e.length-1;0<=o;o--){var s=e[o];if(!s[0]){s.push(n);break}var a=void 0;if(a=s[0].offsetParent===n.offsetParent?vn(s[0]):(r=vn(n,!0),vn(s[0],!0)),r.top>=a.bottom-1&&r.top!==a.top){e.push([n]);break}if(r.bottom>a.top){if(r.left<a.left&&!Jt){s.unshift(n);break}s.push(n);break}if(0===o){e.unshift([n]);break}}}return e}function vn(t,e){var i;void 0===e&&(e=!1);var n=t.offsetTop,r=t.offsetLeft,o=t.offsetHeight;return e&&(n=(i=pi(t))[0],r=i[1]),{top:n,left:r,height:o,bottom:n+o}}var mn={extends:gn,mixins:[Qi],name:"grid",props:{masonry:Boolean,parallax:Number},data:{margin:"uk-grid-margin",clsStack:"uk-grid-stack",masonry:!1,parallax:0},computed:{length:function(t,e){return e.children.length},parallax:function(t){var e=t.parallax;return e&&this.length?Math.abs(e):""}},connected:function(){this.masonry&&Ie(this.$el,"uk-flex-top uk-flex-wrap-top")},update:[{read:function(t){var r=t.rows;(this.masonry||this.parallax)&&(r=r.map(function(t){return K(t,"offsetLeft")}),Jt&&r.map(function(t){return t.reverse()}));var e=r.some(function(t){return t.some(Ye.inProgress)}),i=!1,n="";if(this.masonry&&this.length){var o=0;i=r.reduce(function(i,t,n){return i[n]=t.map(function(t,e){return 0===n?0:Z(i[n-1][e])+(o-Z(r[n-1][e]&&r[n-1][e].offsetHeight))}),o=t.reduce(function(t,e){return Math.max(t,e.offsetHeight)},0),i},[]),n=function(t){return Math.max.apply(Math,t.reduce(function(i,t){return t.forEach(function(t,e){return i[e]=(i[e]||0)+t.offsetHeight}),i},[]))}(r)+function(t,e){var i=V(t.children),n=i.filter(function(t){return Ae(t,e)})[0];return Z(n?De(n,"marginTop"):De(i[0],"paddingLeft"))}(this.$el,this.margin)*(r.length-1)}return{rows:r,translates:i,height:!e&&n}},write:function(t){var e=t.stacks,i=t.height;ze(this.$el,this.clsStack,e),De(this.$el,"paddingBottom",this.parallax),!1!==i&&De(this.$el,"height",i)},events:["resize"]},{read:function(t){var e=t.height;return{scrolled:!!this.parallax&&fi(this.$el,e?e-ri(this.$el):0)*this.parallax}},write:function(t){var e=t.rows,n=t.scrolled,r=t.translates;!1===n&&!r||e.forEach(function(t,i){return t.forEach(function(t,e){return De(t,"transform",n||r?"translateY("+((r&&-r[i][e])+(n?e%2?n:n/8:0))+"px)":"")})})},events:["scroll","resize"]}]};var wn=Gt?{data:{selMinHeight:!1,forceHeight:!1},computed:{elements:function(t,e){var i=t.selMinHeight;return i?Me(i,e):[e]}},update:[{read:function(){De(this.elements,"height","")},order:-5,events:["resize"]},{write:function(){var i=this;this.elements.forEach(function(t){var e=Z(De(t,"minHeight"));e&&(i.forceHeight||Math.round(e+ai("height",t,"content-box"))>=t.offsetHeight)&&De(t,"height",e)})},order:5,events:["resize"]}]}:{},xn={mixins:[wn],args:"target",props:{target:String,row:Boolean},data:{target:"> *",row:!0,forceHeight:!0},computed:{elements:function(t,e){return Me(t.target,e)}},update:{read:function(){return{rows:(this.row?pn(this.elements):[this.elements]).map(yn)}},write:function(t){t.rows.forEach(function(t){var i=t.heights;return t.elements.forEach(function(t,e){return De(t,"minHeight",i[e])})})},events:["resize"]}};function yn(t){var e;if(t.length<2)return{heights:[""],elements:t};var i=bn(t),n=i.heights,r=i.max,o=t.some(function(t){return t.style.minHeight}),s=t.some(function(t,e){return!t.style.minHeight&&n[e]<r});return o&&s&&(De(t,"minHeight",""),e=bn(t),n=e.heights,r=e.max),{heights:n=t.map(function(t,e){return n[e]===r&&Z(t.style.minHeight).toFixed(2)!==r.toFixed(2)?"":r}),elements:t}}function bn(t){var e=t.map(function(t){return ei(t).height-ai("height",t,"content-box")});return{heights:e,max:Math.max.apply(null,e)}}var kn={mixins:[wn],props:{expand:Boolean,offsetTop:Boolean,offsetBottom:Boolean,minHeight:Number},data:{expand:!1,offsetTop:!1,offsetBottom:!1,minHeight:0},update:{read:function(t){var e=t.minHeight;if(!Bt(this.$el))return!1;var i="",n=ai("height",this.$el,"content-box");if(this.expand){if(this.$el.dataset.heightExpand="",$e("[data-height-expand]")!==this.$el)return!1;i=ri(window)-(Cn(document.documentElement)-Cn(this.$el))-n||""}else{if(i="calc(100vh",this.offsetTop){var r=ei(this.$el).top;i+=0<r&&r<ri(window)/2?" - "+r+"px":""}!0===this.offsetBottom?i+=" - "+Cn(this.$el.nextElementSibling)+"px":H(this.offsetBottom)?i+=" - "+this.offsetBottom+"vh":this.offsetBottom&&l(this.offsetBottom,"px")?i+=" - "+Z(this.offsetBottom)+"px":_(this.offsetBottom)&&(i+=" - "+Cn(at(this.offsetBottom,this.$el))+"px"),i+=(n?" - "+n+"px":"")+")"}return{minHeight:i,prev:e}},write:function(t){var e=t.minHeight,i=t.prev;De(this.$el,{minHeight:e}),e!==i&&this.$update(this.$el,"resize"),this.minHeight&&Z(De(this.$el,"minHeight"))<this.minHeight&&De(this.$el,"minHeight",this.minHeight)},events:["resize"]}};function Cn(t){return t&&ei(t).height||0}var Ln={args:"src",props:{id:Boolean,icon:String,src:String,style:String,width:Number,height:Number,ratio:Number,class:String,strokeAnimation:Boolean,focusable:Boolean,attributes:"list"},data:{ratio:1,include:["style","class","focusable"],class:"",strokeAnimation:!1},beforeConnect:function(){var t,e=this;if(this.class+=" uk-svg",!this.icon&&y(this.src,"#")){var i=this.src.split("#");1<i.length&&(t=i,this.src=t[0],this.icon=t[1])}this.svg=this.getSvg().then(function(t){return e.applyAttributes(t),e.svgEl=function(t,e){{if(Mt(e)||"CANVAS"===e.tagName){nt(e,"hidden",!0);var i=e.nextElementSibling;return Sn(t,i)?i:pe(e,t)}var n=e.lastElementChild;return Sn(t,n)?n:fe(e,t)}}(t,e.$el)},Q)},disconnected:function(){var e=this;Mt(this.$el)&&nt(this.$el,"hidden",null),this.svg&&this.svg.then(function(t){return(!e._connected||t!==e.svgEl)&&me(t)},Q),this.svg=this.svgEl=null},update:{read:function(){return!!(this.strokeAnimation&&this.svgEl&&Bt(this.svgEl))},write:function(){!function(t){var e=In(t);e&&t.style.setProperty("--uk-animation-stroke",e)}(this.svgEl)},type:["resize"]},methods:{getSvg:function(){var e=this;return function(i){if($n[i])return $n[i];return $n[i]=new Wt(function(e,t){i?w(i,"data:")?e(decodeURIComponent(i.split(",")[1])):Xt(i).then(function(t){return e(t.response)},function(){return t("SVG not found.")}):t()})}(this.src).then(function(t){return function(t,e){e&&y(t,"<symbol")&&(t=function(t,e){if(!Bn[t]){var i;for(Bn[t]={};i=Mn.exec(t);)Bn[t][i[3]]='<svg xmlns="http://www.w3.org/2000/svg"'+i[1]+"svg>";Mn.lastIndex=0}return Bn[t][e]}(t,e)||t);return(t=$e(t.substr(t.indexOf("<svg"))))&&t.hasChildNodes()&&t}(t,e.icon)||Wt.reject("SVG not found.")})},applyAttributes:function(i){var n=this;for(var t in this.$options.props)this[t]&&y(this.include,t)&&nt(i,t,this[t]);for(var e in this.attributes){var r=this.attributes[e].split(":",2),o=r[0],s=r[1];nt(i,o,s)}this.id||ot(i,"id");var a=["width","height"],h=[this.width,this.height];h.some(function(t){return t})||(h=a.map(function(t){return nt(i,t)}));var c=nt(i,"viewBox");c&&!h.some(function(t){return t})&&(h=c.split(" ").slice(2)),h.forEach(function(t,e){(t=(0|t)*n.ratio)&&nt(i,a[e],t),t&&!h[1^e]&&ot(i,a[1^e])}),nt(i,"data-svg",this.icon||this.src)}}},$n={};var Mn=/<symbol(.*?id=(['"])(.*?)\2[^]*?<\/)symbol>/g,Bn={};function In(t){return Math.ceil(Math.max.apply(Math,Me("[stroke]",t).map(function(t){return t.getTotalLength&&t.getTotalLength()||0}).concat([0])))}function Sn(t,e){return nt(t,"data-svg")===nt(e,"data-svg")}var En={},Tn={spinner:'<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="15" cy="15" r="14"/></svg>',totop:'<svg width="18" height="10" viewBox="0 0 18 10" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 9 9 1 17 9 "/></svg>',marker:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="4" width="1" height="11"/><rect x="4" y="9" width="11" height="1"/></svg>',"close-icon":'<svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="1" y1="1" x2="13" y2="13"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13" y1="1" x2="1" y2="13"/></svg>',"close-large":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.4" x1="1" y1="1" x2="19" y2="19"/><line fill="none" stroke="#000" stroke-width="1.4" x1="19" y1="1" x2="1" y2="19"/></svg>',"navbar-toggle-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="9" width="20" height="2"/><rect y="3" width="20" height="2"/><rect y="15" width="20" height="2"/></svg>',"overlay-icon":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><rect x="19" y="0" width="1" height="40"/><rect x="0" y="19" width="40" height="1"/></svg>',"pagination-next":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 1 6 6 1 11"/></svg>',"pagination-previous":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="6 1 1 6 6 11"/></svg>',"search-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',"search-large":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.8" cx="17.5" cy="17.5" r="16.5"/><line fill="none" stroke="#000" stroke-width="1.8" x1="38" y1="39" x2="29" y2="30"/></svg>',"search-navbar":'<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10.5" cy="10.5" r="9.5"/><line fill="none" stroke="#000" stroke-width="1.1" x1="23" y1="23" x2="17" y2="17"/></svg>',"slidenav-next":'<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="1.225,23 12.775,12 1.225,1 "/></svg>',"slidenav-next-large":'<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="4.002,38.547 22.527,20.024 4,1.5 "/></svg>',"slidenav-previous":'<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="12.775,1 1.225,12 12.775,23 "/></svg>',"slidenav-previous-large":'<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="20.527,1.5 2,20.024 20.525,38.547 "/></svg>'},An={install:function(r){r.icon.add=function(t,e){var i,n=_(t)?((i={})[t]=e,i):t;X(n,function(t,e){Tn[e]=t,delete En[e]}),r._initialized&&Le(document.body,function(t){return X(r.getComponents(t),function(t){t.$options.isIcon&&t.icon in n&&t.$reset()})})}},extends:Ln,args:"icon",props:["icon"],data:{include:["focusable"]},isIcon:!0,beforeConnect:function(){Ie(this.$el,"uk-icon")},methods:{getSvg:function(){var t=function(t){if(!Tn[t])return null;En[t]||(En[t]=$e(Tn[t].trim()));return En[t].cloneNode(!0)}(function(t){return Jt?Y(Y(t,"left","right"),"previous","next"):t}(this.icon));return t?Wt.resolve(t):Wt.reject("Icon not found.")}}},zn={args:!1,extends:An,data:function(t){return{icon:d(t.constructor.options.name)}},beforeConnect:function(){Ie(this.$el,this.$name)}},_n={extends:zn,beforeConnect:function(){Ie(this.$el,"uk-slidenav")},computed:{icon:function(t,e){var i=t.icon;return Ae(e,"uk-slidenav-large")?i+"-large":i}}},Nn={extends:zn,computed:{icon:function(t,e){var i=t.icon;return Ae(e,"uk-search-icon")&&kt(e,".uk-search-large").length?"search-large":kt(e,".uk-search-navbar").length?"search-navbar":i}}},Hn={extends:zn,computed:{icon:function(){return"close-"+(Ae(this.$el,"uk-close-large")?"large":"icon")}}},On={extends:zn,connected:function(){var e=this;this.svg.then(function(t){return 1!==e.ratio&&De($e("circle",t),"strokeWidth",1/e.ratio)},Q)}};var Dn={args:"dataSrc",props:{dataSrc:String,dataSrcset:Boolean,sizes:String,width:Number,height:Number,offsetTop:String,offsetLeft:String,target:String},data:{dataSrc:"",dataSrcset:!1,sizes:!1,width:!1,height:!1,offsetTop:"50vh",offsetLeft:0,target:!1},computed:{cacheKey:function(t){var e=t.dataSrc;return this.$name+"."+e},width:function(t){var e=t.width,i=t.dataWidth;return e||i},height:function(t){var e=t.height,i=t.dataHeight;return e||i},sizes:function(t){var e=t.sizes,i=t.dataSizes;return e||i},isImg:function(t,e){return qn(e)},target:{get:function(t){var e=t.target;return[this.$el].concat(ht(e,this.$el))},watch:function(){this.observe()}},offsetTop:function(t){return vi(t.offsetTop,"height")},offsetLeft:function(t){return vi(t.offsetLeft,"width")}},connected:function(){Yn[this.cacheKey]?Pn(this.$el,Yn[this.cacheKey]||this.dataSrc,this.dataSrcset,this.sizes):this.isImg&&this.width&&this.height&&Pn(this.$el,function(t,e,i){var n;i&&(n=it.ratio({width:t,height:e},"width",vi(Zn(i))),t=n.width,e=n.height);return'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+e+'"></svg>'}(this.width,this.height,this.sizes)),this.observer=new Ni(this.load,{rootMargin:this.offsetTop+"px "+this.offsetLeft+"px"}),requestAnimationFrame(this.observe)},disconnected:function(){this.observer.disconnect()},update:{read:function(t){var e=this,i=t.image;if(i||"complete"!==document.readyState||this.load(this.observer.takeRecords()),this.isImg)return!1;i&&i.then(function(t){return t&&""!==t.currentSrc&&Pn(e.$el,Rn(t))})},write:function(t){if(this.dataSrcset&&1!==window.devicePixelRatio){var e=De(this.$el,"backgroundSize");!e.match(/^(auto\s?)+$/)&&Z(e)!==t.bgSize||(t.bgSize=function(t,e){var i=vi(Zn(e)),n=(t.match(Wn)||[]).map(Z).sort(function(t,e){return t-e});return n.filter(function(t){return i<=t})[0]||n.pop()||""}(this.dataSrcset,this.sizes),De(this.$el,"backgroundSize",t.bgSize+"px"))}},events:["resize"]},methods:{load:function(t){var e=this;t.some(function(t){return t.isIntersecting})&&(this._data.image=Kt(this.dataSrc,this.dataSrcset,this.sizes).then(function(t){return Pn(e.$el,Rn(t),t.srcset,t.sizes),Yn[e.cacheKey]=Rn(t),t},Q),this.observer.disconnect())},observe:function(){var e=this;!this._data.image&&this._connected&&this.target.forEach(function(t){return e.observer.observe(t)})}}};function Pn(t,e,i,n){if(qn(t))n&&(t.sizes=n),i&&(t.srcset=i),e&&(t.src=e);else if(e){!y(t.style.backgroundImage,e)&&(De(t,"backgroundImage","url("+Lt(e)+")"),Nt(t,Ht("load",!1)))}}var jn=/\s*(.*?)\s*(\w+|calc\(.*?\))\s*(?:,|$)/g;function Zn(t){var e,i;for(jn.lastIndex=0;e=jn.exec(t);)if(!e[1]||window.matchMedia(e[1]).matches){e=w(i=e[2],"calc")?i.substring(5,i.length-1).replace(Fn,function(t){return vi(t)}).replace(/ /g,"").match(Vn).reduce(function(t,e){return t+ +e},0):i;break}return e||"100vw"}var Fn=/\d+(?:\w+|%)/g,Vn=/[+-]?(\d+)/g;var Wn=/\s+\d+w\s*(?:,|$)/g;function qn(t){return"IMG"===t.tagName}function Rn(t){return t.currentSrc||t.src}var Yn,Un="__test__";try{(Yn=window.sessionStorage||{})[Un]=1,delete Yn[Un]}catch(t){Yn={}}var Xn={props:{media:Boolean},data:{media:!1},computed:{matchMedia:function(){var t=function(t){if(_(t)){if("@"===t[0])t=Z(Fe("breakpoint-"+t.substr(1)));else if(isNaN(t))return t}return!(!t||isNaN(t))&&"(min-width: "+t+"px)"}(this.media);return!t||window.matchMedia(t).matches}}};var Kn,Gn,Jn={mixins:[Qi,Xn],props:{fill:String},data:{fill:"",clsWrapper:"uk-leader-fill",clsHide:"uk-leader-hide",attrFill:"data-fill"},computed:{fill:function(t){return t.fill||Fe("leader-fill-content")}},connected:function(){var t;t=xe(this.$el,'<span class="'+this.clsWrapper+'">'),this.wrapper=t[0]},disconnected:function(){ye(this.wrapper.childNodes)},update:{read:function(t){var e=t.changed,i=t.width,n=i;return{width:i=Math.floor(this.$el.offsetWidth/2),fill:this.fill,changed:e||n!==i,hide:!this.matchMedia}},write:function(t){ze(this.wrapper,this.clsHide,t.hide),t.changed&&(t.changed=!1,nt(this.wrapper,this.attrFill,new Array(t.width).join(t.fill)))},events:["resize"]}},Qn={props:{container:Boolean},data:{container:!0},computed:{container:function(t){var e=t.container;return!0===e&&this.$container||e&&$e(e)}}},tr={mixins:[Qi,Qn,tn],props:{selPanel:String,selClose:String,escClose:Boolean,bgClose:Boolean,stack:Boolean},data:{cls:"uk-open",escClose:!0,bgClose:!0,overlay:!0,stack:!1},computed:{panel:function(t,e){return $e(t.selPanel,e)},transitionElement:function(){return this.panel},bgClose:function(t){return t.bgClose&&this.panel}},beforeDisconnect:function(){this.isToggled()&&this.toggleNow(this.$el,!1)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(t){t.preventDefault(),this.hide()}},{name:"toggle",self:!0,handler:function(t){t.defaultPrevented||(t.preventDefault(),this.toggle())}},{name:"beforeshow",self:!0,handler:function(t){var e=Kn&&Kn!==this&&Kn;Kn=this,e?this.stack?this.prev=e:((Kn=e).hide().then(this.show),t.preventDefault()):function(){if(Gn)return;Gn=[At(document,re,function(t){var e=t.target,i=t.defaultPrevented;!Kn||!Kn.bgClose||i||Kn.overlay&&!Tt(e,Kn.$el)||Tt(e,Kn.panel)||Kn.hide()}),At(document,"keydown",function(t){27===t.keyCode&&Kn&&Kn.escClose&&(t.preventDefault(),Kn.hide())})]}()}},{name:"show",self:!0,handler:function(){Ae(document.documentElement,this.clsPage)||(this.scrollbarWidth=oi(window)-oi(document),De(document.body,"overflowY",this.scrollbarWidth&&this.overlay?"scroll":"")),Ie(document.documentElement,this.clsPage)}},{name:"hide",self:!0,handler:function(){Kn&&(Kn!==this||this.prev)||(Gn&&Gn.forEach(function(t){return t()}),Gn=null)}},{name:"hidden",self:!0,handler:function(){var t,e=this.prev;if(Kn=Kn&&Kn!==this&&Kn||e)for(;e;){if(e.clsPage===this.clsPage){t=!0;break}e=e.prev}else De(document.body,"overflowY","");t||Se(document.documentElement,this.clsPage)}}],methods:{toggle:function(){return this.isToggled()?this.hide():this.show()},show:function(){var e=this;return this.container&&this.$el.parentNode!==this.container?(fe(this.container,this.$el),new Wt(function(t){return requestAnimationFrame(function(){return e.show().then(t)})})):this.toggleElement(this.$el,!0,er(this))},hide:function(){return this.toggleElement(this.$el,!1,er(this))},getActive:function(){return Kn}}};function er(t){var s=t.transitionElement,a=t._toggle;return function(r,o){return new Wt(function(i,n){return _t(r,"show hide",function(){r._reject&&r._reject(),r._reject=n,a(r,o);var t=_t(s,"transitionstart",function(){_t(s,"transitionend transitioncancel",i,!1,function(t){return t.target===s}),clearTimeout(e)},!1,function(t){return t.target===s}),e=setTimeout(function(){t(),i()},q(De(s,"transitionDuration")))})})}}var ir={install:function(a){a.modal.dialog=function(t,e){var i=a.modal(' <div class="uk-modal"> <div class="uk-modal-dialog">'+t+"</div> </div> ",e);return i.show(),At(i.$el,"hidden",function(t){t.target===t.currentTarget&&Wt.resolve(function(){return i.$destroy(!0)})}),i},a.modal.alert=function(e,i){return i=U({bgClose:!1,escClose:!1,labels:a.modal.labels},i),new Wt(function(t){return At(a.modal.dialog(' <div class="uk-modal-body">'+(_(e)?e:de(e))+'</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-primary uk-modal-close" autofocus>'+i.labels.ok+"</button> </div> ",i).$el,"hide",t)})},a.modal.confirm=function(r,o){return o=U({bgClose:!1,escClose:!0,labels:a.modal.labels},o),new Wt(function(e,t){var i=a.modal.dialog(' <form> <div class="uk-modal-body">'+(_(r)?r:de(r))+'</div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">'+o.labels.cancel+'</button> <button class="uk-button uk-button-primary" autofocus>'+o.labels.ok+"</button> </div> </form> ",o),n=!1;At(i.$el,"submit","form",function(t){t.preventDefault(),e(),n=!0,i.hide()}),At(i.$el,"hide",function(){n||t()})})},a.modal.prompt=function(t,o,s){return s=U({bgClose:!1,escClose:!0,labels:a.modal.labels},s),new Wt(function(e){var i=a.modal.dialog(' <form class="uk-form-stacked"> <div class="uk-modal-body"> <label>'+(_(t)?t:de(t))+'</label> <input class="uk-input" autofocus> </div> <div class="uk-modal-footer uk-text-right"> <button class="uk-button uk-button-default uk-modal-close" type="button">'+s.labels.cancel+'</button> <button class="uk-button uk-button-primary">'+s.labels.ok+"</button> </div> </form> ",s),n=$e("input",i.$el);n.value=o;var r=!1;At(i.$el,"submit","form",function(t){t.preventDefault(),e(n.value),r=!0,i.hide()}),At(i.$el,"hide",function(){r||e(null)})})},a.modal.labels={ok:"Ok",cancel:"Cancel"}},mixins:[tr],data:{clsPage:"uk-modal-page",selPanel:".uk-modal-dialog",selClose:".uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full"},events:[{name:"show",self:!0,handler:function(){Ae(this.panel,"uk-margin-auto-vertical")?Ie(this.$el,"uk-flex"):De(this.$el,"display","block"),ri(this.$el)}},{name:"hidden",self:!0,handler:function(){De(this.$el,"display",""),Se(this.$el,"uk-flex")}}]};var nr={extends:en,data:{targets:"> .uk-parent",toggle:"> a",content:"> ul"}},rr={mixins:[Qi,wn],props:{dropdown:String,mode:"list",align:String,offset:Number,boundary:Boolean,boundaryAlign:Boolean,clsDrop:String,delayShow:Number,delayHide:Number,dropbar:Boolean,dropbarMode:String,dropbarAnchor:Boolean,duration:Number},data:{dropdown:".uk-navbar-nav > li",align:Jt?"right":"left",clsDrop:"uk-navbar-dropdown",mode:void 0,offset:void 0,delayShow:void 0,delayHide:void 0,boundaryAlign:void 0,flip:"x",boundary:!0,dropbar:!1,dropbarMode:"slide",dropbarAnchor:!1,duration:200,forceHeight:!0,selMinHeight:".uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle"},computed:{boundary:function(t,e){var i=t.boundary,n=t.boundaryAlign;return!0===i||n?e:i},dropbarAnchor:function(t,e){return at(t.dropbarAnchor,e)},pos:function(t){return"bottom-"+t.align},dropdowns:function(t,e){return Me(t.dropdown+" ."+t.clsDrop,e)}},beforeConnect:function(){var t=this.$props.dropbar;this.dropbar=t&&(at(t,this.$el)||$e("+ .uk-navbar-dropbar",this.$el)||$e("<div></div>")),this.dropbar&&(Ie(this.dropbar,"uk-navbar-dropbar"),"slide"===this.dropbarMode&&Ie(this.dropbar,"uk-navbar-dropbar-slide"))},disconnected:function(){this.dropbar&&me(this.dropbar)},update:function(){var e=this;this.$create("drop",this.dropdowns.filter(function(t){return!e.getDropdown(t)}),U({},this.$props,{boundary:this.boundary,pos:this.pos,offset:this.dropbar||this.offset}))},events:[{name:"mouseover",delegate:function(){return this.dropdown},handler:function(t){var e=t.current,i=this.getActive();i&&i.toggle&&!Tt(i.toggle.$el,e)&&!i.tracker.movesTo(i.$el)&&i.hide(!1)}},{name:"mouseleave",el:function(){return this.dropbar},handler:function(){var t=this.getActive();t&&!this.dropdowns.some(function(t){return xt(t,":hover")})&&t.hide()}},{name:"beforeshow",capture:!0,filter:function(){return this.dropbar},handler:function(){this.dropbar.parentNode||pe(this.dropbarAnchor||this.$el,this.dropbar)}},{name:"show",capture:!0,filter:function(){return this.dropbar},handler:function(t,e){var i=e.$el,n=e.dir;this.clsDrop&&Ie(i,this.clsDrop+"-dropbar"),"bottom"===n&&this.transitionTo(i.offsetHeight+Z(De(i,"marginTop"))+Z(De(i,"marginBottom")),i)}},{name:"beforehide",filter:function(){return this.dropbar},handler:function(t,e){var i=e.$el,n=this.getActive();xt(this.dropbar,":hover")&&n&&n.$el===i&&t.preventDefault()}},{name:"hide",filter:function(){return this.dropbar},handler:function(t,e){var i=e.$el,n=this.getActive();(!n||n&&n.$el===i)&&this.transitionTo(0)}}],methods:{getActive:function(){var t=this.dropdowns.map(this.getDropdown).filter(function(t){return t&&t.isActive()})[0];return t&&y(t.mode,"hover")&&Tt(t.toggle.$el,this.$el)&&t},transitionTo:function(t,e){var i=this,n=this.dropbar,r=Bt(n)?ri(n):0;return De(e=r<t&&e,"clip","rect(0,"+e.offsetWidth+"px,"+r+"px,0)"),ri(n,r),Ye.cancel([e,n]),Wt.all([Ye.start(n,{height:t},this.duration),Ye.start(e,{clip:"rect(0,"+e.offsetWidth+"px,"+t+"px,0)"},this.duration)]).catch(Q).then(function(){De(e,{clip:""}),i.$update(n)})},getDropdown:function(t){return this.$getComponent(t,"drop")||this.$getComponent(t,"dropdown")}}},or={mixins:[tr],args:"mode",props:{mode:String,flip:Boolean,overlay:Boolean},data:{mode:"slide",flip:!1,overlay:!1,clsPage:"uk-offcanvas-page",clsContainer:"uk-offcanvas-container",selPanel:".uk-offcanvas-bar",clsFlip:"uk-offcanvas-flip",clsContainerAnimation:"uk-offcanvas-container-animation",clsSidebarAnimation:"uk-offcanvas-bar-animation",clsMode:"uk-offcanvas",clsOverlay:"uk-offcanvas-overlay",selClose:".uk-offcanvas-close",container:!1},computed:{clsFlip:function(t){var e=t.flip,i=t.clsFlip;return e?i:""},clsOverlay:function(t){var e=t.overlay,i=t.clsOverlay;return e?i:""},clsMode:function(t){var e=t.mode;return t.clsMode+"-"+e},clsSidebarAnimation:function(t){var e=t.mode,i=t.clsSidebarAnimation;return"none"===e||"reveal"===e?"":i},clsContainerAnimation:function(t){var e=t.mode,i=t.clsContainerAnimation;return"push"!==e&&"reveal"!==e?"":i},transitionElement:function(t){return"reveal"===t.mode?this.panel.parentNode:this.panel}},events:[{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(t){var e=t.current;e.hash&&$e(e.hash,document.body)&&this.hide()}},{name:"touchstart",passive:!0,el:function(){return this.panel},handler:function(t){var e=t.targetTouches;1===e.length&&(this.clientY=e[0].clientY)}},{name:"touchmove",self:!0,passive:!1,filter:function(){return this.overlay},handler:function(t){t.cancelable&&t.preventDefault()}},{name:"touchmove",passive:!1,el:function(){return this.panel},handler:function(t){if(1===t.targetTouches.length){var e=event.targetTouches[0].clientY-this.clientY,i=this.panel,n=i.scrollTop,r=i.scrollHeight,o=i.clientHeight;(r<=o||0===n&&0<e||r-n<=o&&e<0)&&t.cancelable&&t.preventDefault()}}},{name:"show",self:!0,handler:function(){"reveal"!==this.mode||Ae(this.panel.parentNode,this.clsMode)||(we(this.panel,"<div>"),Ie(this.panel.parentNode,this.clsMode)),De(document.documentElement,"overflowY",this.overlay?"hidden":""),Ie(document.body,this.clsContainer,this.clsFlip),De(document.body,"touch-action","pan-y pinch-zoom"),De(this.$el,"display","block"),Ie(this.$el,this.clsOverlay),Ie(this.panel,this.clsSidebarAnimation,"reveal"!==this.mode?this.clsMode:""),ri(document.body),Ie(document.body,this.clsContainerAnimation),this.clsContainerAnimation&&(sr().content+=",user-scalable=0")}},{name:"hide",self:!0,handler:function(){Se(document.body,this.clsContainerAnimation),De(document.body,"touch-action","");var t=this.getActive();("none"===this.mode||t&&t!==this&&t!==this.prev)&&Nt(this.panel,"transitionend")}},{name:"hidden",self:!0,handler:function(){this.clsContainerAnimation&&function(){var t=sr();t.content=t.content.replace(/,user-scalable=0$/,"")}(),"reveal"===this.mode&&ye(this.panel),Se(this.panel,this.clsSidebarAnimation,this.clsMode),Se(this.$el,this.clsOverlay),De(this.$el,"display",""),Se(document.body,this.clsContainer,this.clsFlip),De(document.documentElement,"overflowY","")}},{name:"swipeLeft swipeRight",handler:function(t){this.isToggled()&&l(t.type,"Left")^this.flip&&this.hide()}}]};function sr(){return $e('meta[name="viewport"]',document.head)||fe(document.head,'<meta name="viewport">')}var ar={mixins:[Qi],props:{selContainer:String,selContent:String},data:{selContainer:".uk-modal",selContent:".uk-modal-dialog"},computed:{container:function(t,e){return bt(e,t.selContainer)},content:function(t,e){return bt(e,t.selContent)}},connected:function(){De(this.$el,"minHeight",150)},update:{read:function(){return!(!this.content||!this.container)&&{current:Z(De(this.$el,"maxHeight")),max:Math.max(150,ri(this.container)-(ei(this.content).height-ri(this.$el)))}},write:function(t){var e=t.current,i=t.max;De(this.$el,"maxHeight",i),Math.round(e)!==Math.round(i)&&Nt(this.$el,"resize")},events:["resize"]}},hr={props:["width","height"],connected:function(){Ie(this.$el,"uk-responsive-width")},update:{read:function(){return!!(Bt(this.$el)&&this.width&&this.height)&&{width:oi(this.$el.parentNode),height:this.height}},write:function(t){ri(this.$el,it.contain({height:this.height,width:this.width},t).height)},events:["resize"]}},cr={props:{duration:Number,offset:Number},data:{duration:1e3,offset:0},methods:{scrollTo:function(e){var i=this;e=e&&$e(e)||document.body;var t=ri(document),n=ri(window),r=ei(e).top-this.offset;if(t<r+n&&(r=t-n),Nt(this.$el,"beforescroll",[this,e])){var o=Date.now(),s=window.pageYOffset,a=function(){var t=s+(r-s)*function(t){return.5*(1-Math.cos(Math.PI*t))}(J((Date.now()-o)/i.duration));gi(window,t),t!==r?requestAnimationFrame(a):Nt(i.$el,"scrolled",[i,e])};a()}}},events:{click:function(t){t.defaultPrevented||(t.preventDefault(),this.scrollTo(Lt(decodeURIComponent(this.$el.hash)).substr(1)))}}};var lr={args:"cls",props:{cls:String,target:String,hidden:Boolean,offsetTop:Number,offsetLeft:Number,repeat:Boolean,delay:Number},data:function(){return{cls:!1,target:!1,hidden:!0,offsetTop:0,offsetLeft:0,repeat:!1,delay:0,inViewClass:"uk-scrollspy-inview"}},computed:{elements:function(t,e){var i=t.target;return i?Me(i,e):[e]}},update:[{write:function(){this.hidden&&De(Et(this.elements,":not(."+this.inViewClass+")"),"visibility","hidden")}},{read:function(t){var i=this;t.update&&this.elements.forEach(function(t){var e=t._ukScrollspyState;(e=e||{cls:st(t,"uk-scrollspy-class")||i.cls}).show=di(t,i.offsetTop,i.offsetLeft),t._ukScrollspyState=e})},write:function(r){var o=this;if(!r.update)return this.$emit(),r.update=!0;this.elements.forEach(function(t){var i=t._ukScrollspyState,e=i.cls;if(!i.show||i.inview||i.queued){if(!i.show&&(i.inview||i.queued)&&o.repeat){if(i.abort&&i.abort(),!i.inview)return;De(t,"visibility",o.hidden?"hidden":""),Se(t,o.inViewClass),ze(t,e),Nt(t,"outview"),o.$update(t),i.inview=!1}}else{var n=function(){De(t,"visibility",""),Ie(t,o.inViewClass),ze(t,e),Nt(t,"inview"),o.$update(t),i.inview=!0,i.abort&&i.abort()};o.delay?(i.queued=!0,r.promise=(r.promise||Wt.resolve()).then(function(){return!i.inview&&new Wt(function(t){var e=setTimeout(function(){n(),t()},r.promise||1===o.elements.length?o.delay:0);i.abort=function(){clearTimeout(e),t(),i.queued=!1}})})):n()}})},events:["scroll","resize"]}]},ur={props:{cls:String,closest:String,scroll:Boolean,overflow:Boolean,offset:Number},data:{cls:"uk-active",closest:!1,scroll:!1,overflow:!0,offset:0},computed:{links:function(t,e){return Me('a[href^="#"]',e).filter(function(t){return t.hash})},elements:function(t){var e=t.closest;return bt(this.links,e||"*")},targets:function(){return Me(this.links.map(function(t){return Lt(t.hash).substr(1)}).join(","))}},update:[{read:function(){this.scroll&&this.$create("scroll",this.links,{offset:this.offset||0})}},{read:function(o){var s=this,a=window.pageYOffset+this.offset+1,h=ri(document)-ri(window)+this.offset;o.active=!1,this.targets.every(function(t,e){var i=ei(t).top,n=e+1===s.targets.length;if(!s.overflow&&(0===e&&a<i||n&&i+t.offsetTop<a))return!1;if(!n&&ei(s.targets[e+1]).top<=a)return!0;if(h<=a)for(var r=s.targets.length-1;e<r;r--)if(di(s.targets[r])){t=s.targets[r];break}return!(o.active=$e(Et(s.links,'[href="#'+t.id+'"]')))})},write:function(t){var e=t.active;this.links.forEach(function(t){return t.blur()}),Se(this.elements,this.cls),e&&Nt(this.$el,"active",[e,Ie(this.closest?bt(e,this.closest):e,this.cls)])},events:["scroll","resize"]}]},dr={mixins:[Qi,Xn],props:{top:null,bottom:Boolean,offset:String,animation:String,clsActive:String,clsInactive:String,clsFixed:String,clsBelow:String,selTarget:String,widthElement:Boolean,showOnUp:Boolean,targetOffset:Number},data:{top:0,bottom:!1,offset:0,animation:"",clsActive:"uk-active",clsInactive:"",clsFixed:"uk-sticky-fixed",clsBelow:"uk-sticky-below",selTarget:"",widthElement:!1,showOnUp:!1,targetOffset:!1},computed:{offset:function(t){return vi(t.offset)},selTarget:function(t,e){var i=t.selTarget;return i&&$e(i,e)||e},widthElement:function(t,e){return at(t.widthElement,e)||this.placeholder},isActive:{get:function(){return Ae(this.selTarget,this.clsActive)},set:function(t){t&&!this.isActive?(Te(this.selTarget,this.clsInactive,this.clsActive),Nt(this.$el,"active")):t||Ae(this.selTarget,this.clsInactive)||(Te(this.selTarget,this.clsActive,this.clsInactive),Nt(this.$el,"inactive"))}}},connected:function(){this.placeholder=$e("+ .uk-sticky-placeholder",this.$el)||$e('<div class="uk-sticky-placeholder"></div>'),this.isFixed=!1,this.isActive=!1},disconnected:function(){this.isFixed&&(this.hide(),Se(this.selTarget,this.clsInactive)),me(this.placeholder),this.placeholder=null,this.widthElement=null},events:[{name:"load hashchange popstate",el:window,handler:function(){var n=this;if(!1!==this.targetOffset&&location.hash&&0<window.pageYOffset){var r=$e(location.hash);r&&yi.read(function(){var t=ei(r).top,e=ei(n.$el).top,i=n.$el.offsetHeight;n.isFixed&&t<=e+i&&e<=t+r.offsetHeight&&gi(window,t-i-(H(n.targetOffset)?n.targetOffset:0)-n.offset)})}}}],update:[{read:function(t,e){var i=t.height;this.isActive&&"update"!==e&&(this.hide(),i=this.$el.offsetHeight,this.show()),i=this.isActive?i:this.$el.offsetHeight,this.topOffset=ei(this.isFixed?this.placeholder:this.$el).top,this.bottomOffset=this.topOffset+i;var n=fr("bottom",this);return this.top=Math.max(Z(fr("top",this)),this.topOffset)-this.offset,this.bottom=n&&n-i,this.inactive=!this.matchMedia,{lastScroll:!1,height:i,margins:De(this.$el,["marginTop","marginBottom","marginLeft","marginRight"])}},write:function(t){var e=t.height,i=t.margins,n=this.placeholder;De(n,U({height:e},i)),Tt(n,document)||(pe(this.$el,n),nt(n,"hidden","")),this.isActive=this.isActive},events:["resize"]},{read:function(t){var e=t.scroll;return void 0===e&&(e=0),this.width=(Bt(this.widthElement)?this.widthElement:this.$el).offsetWidth,this.scroll=window.pageYOffset,{dir:e<=this.scroll?"down":"up",scroll:this.scroll,visible:Bt(this.$el),top:pi(this.placeholder)[0]}},write:function(t,e){var i=this,n=t.initTimestamp;void 0===n&&(n=0);var r=t.dir,o=t.lastDir,s=t.lastScroll,a=t.scroll,h=t.top,c=t.visible,l=performance.now();if(!((t.lastScroll=a)<0||a===s||!c||this.disabled||this.showOnUp&&"scroll"!==e||((300<l-n||r!==o)&&(t.initScroll=a,t.initTimestamp=l),t.lastDir=r,this.showOnUp&&Math.abs(t.initScroll-a)<=30&&Math.abs(s-a)<=10)))if(this.inactive||a<this.top||this.showOnUp&&(a<=this.top||"down"===r||"up"===r&&!this.isFixed&&a<=this.bottomOffset)){if(!this.isFixed)return void(Je.inProgress(this.$el)&&a<h&&(Je.cancel(this.$el),this.hide()));this.isFixed=!1,this.animation&&a>this.topOffset?(Je.cancel(this.$el),Je.out(this.$el,this.animation).then(function(){return i.hide()},Q)):this.hide()}else this.isFixed?this.update():this.animation?(Je.cancel(this.$el),this.show(),Je.in(this.$el,this.animation).catch(Q)):this.show()},events:["resize","scroll"]}],methods:{show:function(){this.isFixed=!0,this.update(),nt(this.placeholder,"hidden",null)},hide:function(){this.isActive=!1,Se(this.$el,this.clsFixed,this.clsBelow),De(this.$el,{position:"",top:"",width:""}),nt(this.placeholder,"hidden","")},update:function(){var t=0!==this.top||this.scroll>this.top,e=Math.max(0,this.offset);this.bottom&&this.scroll>this.bottom-this.offset&&(e=this.bottom-this.scroll),De(this.$el,{position:"fixed",top:e+"px",width:this.width}),this.isActive=t,ze(this.$el,this.clsBelow,this.scroll>this.bottomOffset),Ie(this.$el,this.clsFixed)}}};function fr(t,e){var i=e.$props,n=e.$el,r=e[t+"Offset"],o=i[t];if(o){if(H(o))return r+Z(o);if(_(o)&&o.match(/^-?\d/))return vi(o);var s=!0===o?n.parentNode:at(o,n);return s?ei(s).top+s.offsetHeight:void 0}}var gr,pr={mixins:[tn],args:"connect",props:{connect:String,toggle:String,active:Number,swiping:Boolean},data:{connect:"~.uk-switcher",toggle:"> * > :first-child",active:0,swiping:!0,cls:"uk-active",clsContainer:"uk-switcher",attrItem:"uk-switcher-item",queued:!0},computed:{connects:function(t,e){return ht(t.connect,e)},toggles:function(t,e){return Me(t.toggle,e)}},events:[{name:"click",delegate:function(){return this.toggle+":not(.uk-disabled)"},handler:function(e){e.preventDefault(),this.show(V(this.$el.children).filter(function(t){return Tt(e.current,t)})[0])}},{name:"click",el:function(){return this.connects},delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(t){t.preventDefault(),this.show(st(t.current,this.attrItem))}},{name:"swipeRight swipeLeft",filter:function(){return this.swiping},el:function(){return this.connects},handler:function(t){var e=t.type;this.show(l(e,"Left")?"next":"previous")}}],update:function(){var e=this;this.connects.forEach(function(t){return e.updateAria(t.children)});var t=this.$el.children;this.show(Et(t,"."+this.cls)[0]||t[this.active]||t[0]),this.swiping&&De(this.connects,"touch-action","pan-y pinch-zoom")},methods:{index:function(){return!O(this.connects)&&ce(Et(this.connects[0].children,"."+this.cls)[0])},show:function(t){for(var e,i,n=this,r=this.$el.children,o=r.length,s=this.index(),a=0<=s,h="previous"===t?-1:1,c=le(t,r,s),l=0;l<o;l++,c=(c+h+o)%o)if(!xt(this.toggles[c],".uk-disabled *, .uk-disabled, [disabled]")){e=this.toggles[c],i=r[c];break}!i||0<=s&&Ae(i,this.cls)||s===c||(Se(r,this.cls),Ie(i,this.cls),nt(this.toggles,"aria-expanded",!1),nt(e,"aria-expanded",!0),this.connects.forEach(function(t){a?n.toggleElement([t.children[s],t.children[c]]):n.toggleNow(t.children[c])}))}}},vr={mixins:[Qi],extends:pr,props:{media:Boolean},data:{media:960,attrItem:"uk-tab-item"},connected:function(){var t=Ae(this.$el,"uk-tab-left")?"uk-tab-left":!!Ae(this.$el,"uk-tab-right")&&"uk-tab-right";t&&this.$create("toggle",this.$el,{cls:t,mode:"media",media:this.media})}},mr={mixins:[Xn,tn],args:"target",props:{href:String,target:null,mode:"list"},data:{href:!1,target:!1,mode:"click",queued:!0},computed:{target:function(t,e){var i=t.href,n=t.target;return(n=ht(n||i,e)).length&&n||[e]}},connected:function(){Nt(this.target,"updatearia",[this])},events:[{name:oe+" "+se,filter:function(){return y(this.mode,"hover")},handler:function(t){Zt(t)||this.toggle("toggle"+(t.type===oe?"show":"hide"))}},{name:"click",filter:function(){return y(this.mode,"click")||ee&&y(this.mode,"hover")},handler:function(t){var e;(bt(t.target,'a[href="#"], a[href=""]')||(e=bt(t.target,"a[href]"))&&(this.cls||!Bt(this.target)||e.hash&&xt(this.target,e.hash)))&&t.preventDefault(),this.toggle()}}],update:{read:function(){return!(!y(this.mode,"media")||!this.media)&&{match:this.matchMedia}},write:function(t){var e=t.match,i=this.isToggled(this.target);(e?!i:i)&&this.toggle()},events:["resize"]},methods:{toggle:function(t){Nt(this.target,t||"toggle",[this])&&this.toggleElement(this.target)}}};Oi.version="3.1.7",(gr=Oi).component("accordion",en),gr.component("alert",nn),gr.component("cover",hn),gr.component("drop",ln),gr.component("dropdown",un),gr.component("formCustom",dn),gr.component("gif",fn),gr.component("grid",mn),gr.component("heightMatch",xn),gr.component("heightViewport",kn),gr.component("icon",An),gr.component("img",Dn),gr.component("leader",Jn),gr.component("margin",gn),gr.component("modal",ir),gr.component("nav",nr),gr.component("navbar",rr),gr.component("offcanvas",or),gr.component("overflowAuto",ar),gr.component("responsive",hr),gr.component("scroll",cr),gr.component("scrollspy",lr),gr.component("scrollspyNav",ur),gr.component("sticky",dr),gr.component("svg",Ln),gr.component("switcher",pr),gr.component("tab",vr),gr.component("toggle",mr),gr.component("video",an),gr.component("close",Hn),gr.component("marker",zn),gr.component("navbarToggleIcon",zn),gr.component("overlayIcon",zn),gr.component("paginationNext",zn),gr.component("paginationPrevious",zn),gr.component("searchIcon",Nn),gr.component("slidenavNext",_n),gr.component("slidenavPrevious",_n),gr.component("spinner",On),gr.component("totop",zn),gr.use(rn);var wr={mixins:[Qi],props:{date:String,clsWrapper:String},data:{date:"",clsWrapper:".uk-countdown-%unit%"},computed:{date:function(t){var e=t.date;return Date.parse(e)},days:function(t,e){return $e(t.clsWrapper.replace("%unit%","days"),e)},hours:function(t,e){return $e(t.clsWrapper.replace("%unit%","hours"),e)},minutes:function(t,e){return $e(t.clsWrapper.replace("%unit%","minutes"),e)},seconds:function(t,e){return $e(t.clsWrapper.replace("%unit%","seconds"),e)},units:function(){var e=this;return["days","hours","minutes","seconds"].filter(function(t){return e[t]})}},connected:function(){this.start()},disconnected:function(){var e=this;this.stop(),this.units.forEach(function(t){return ue(e[t])})},events:[{name:"visibilitychange",el:document,handler:function(){document.hidden?this.stop():this.start()}}],update:{write:function(){var n=this,r=function(t){var e=t-Date.now();return{total:e,seconds:e/1e3%60,minutes:e/1e3/60%60,hours:e/1e3/60/60%24,days:e/1e3/60/60/24}}(this.date);r.total<=0&&(this.stop(),r.days=r.hours=r.minutes=r.seconds=0),this.units.forEach(function(t){var e=String(Math.floor(r[t]));e=e.length<2?"0"+e:e;var i=n[t];i.textContent!==e&&((e=e.split("")).length!==i.children.length&&de(i,e.map(function(){return"<span></span>"}).join("")),e.forEach(function(t,e){return i.children[e].textContent=t}))})}},methods:{start:function(){var t=this;this.stop(),this.date&&this.units.length&&(this.$emit(),this.timer=setInterval(function(){return t.$emit()},1e3))},stop:function(){this.timer&&(clearInterval(this.timer),this.timer=null)}}};var xr,yr="uk-animation-target",br={props:{animation:Number},data:{animation:150},computed:{target:function(){return this.$el}},methods:{animate:function(t){var n=this;!function(){if(xr)return;(xr=fe(document.head,"<style>").sheet).insertRule("."+yr+" > * {\n            margin-top: 0 !important;\n            transform: none !important;\n        }",0)}();var r=V(this.target.children),o=r.map(function(t){return kr(t,!0)}),e=ri(this.target),i=window.pageYOffset;t(),Ye.cancel(this.target),r.forEach(Ye.cancel),Cr(this.target),this.$update(this.target),yi.flush();var s=ri(this.target),a=(r=r.concat(V(this.target.children).filter(function(t){return!y(r,t)}))).map(function(t,e){return!!(t.parentNode&&e in o)&&(o[e]?Bt(t)?Lr(t):{opacity:0}:{opacity:Bt(t)?1:0})});return o=a.map(function(t,e){var i=r[e].parentNode===n.target&&(o[e]||kr(r[e]));if(i)if(t){if(!("opacity"in t)){i.opacity%1?t.opacity=1:delete i.opacity}}else delete i.opacity;return i}),Ie(this.target,yr),r.forEach(function(t,e){return o[e]&&De(t,o[e])}),De(this.target,"height",e),gi(window,i),Wt.all(r.map(function(t,e){return o[e]&&a[e]?Ye.start(t,a[e],n.animation,"ease"):Wt.resolve()}).concat(Ye.start(this.target,{height:s},this.animation,"ease"))).then(function(){r.forEach(function(t,e){return De(t,{display:0===a[e].opacity?"none":"",zIndex:""})}),Cr(n.target),n.$update(n.target),yi.flush()},Q)}}};function kr(t,e){var i=De(t,"zIndex");return!!Bt(t)&&U({display:"",opacity:e?De(t,"opacity"):"0",pointerEvents:"none",position:"absolute",zIndex:"auto"===i?ce(t):i},Lr(t))}function Cr(t){De(t.children,{height:"",left:"",opacity:"",pointerEvents:"",position:"",top:"",width:""}),Se(t,yr),De(t,"height","")}function Lr(t){var e=t.getBoundingClientRect(),i=e.height,n=e.width,r=ni(t),o=r.top,s=r.left;return{top:o+=Z(De(t,"marginTop")),left:s,height:i,width:n}}var $r={mixins:[br],args:"target",props:{target:Boolean,selActive:Boolean},data:{target:null,selActive:!1,attrItem:"uk-filter-control",cls:"uk-active",animation:250},computed:{toggles:{get:function(t,e){t.attrItem;return Me("["+this.attrItem+"],[data-"+this.attrItem+"]",e)},watch:function(){this.updateState()}},target:function(t,e){return $e(t.target,e)},children:{get:function(){return V(this.target&&this.target.children)},watch:function(t,e){!function(t,e){return t.length===e.length&&t.every(function(t){return~e.indexOf(t)})}(t,e)&&this.updateState()}}},events:[{name:"click",delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(t){t.preventDefault(),this.apply(t.current)}}],connected:function(){var e=this;if(this.updateState(),!1!==this.selActive){var i=Me(this.selActive,this.$el);this.toggles.forEach(function(t){return ze(t,e.cls,y(i,t))})}},methods:{apply:function(t){this.setState(Br(t,this.attrItem,this.getState()))},getState:function(){var i=this;return this.toggles.filter(function(t){return Ae(t,i.cls)}).reduce(function(t,e){return Br(e,i.attrItem,t)},{filter:{"":""},sort:[]})},setState:function(o,t){var s=this;void 0===t&&(t=!0),o=U({filter:{"":""},sort:[]},o),Nt(this.$el,"beforeFilter",[this,o]);var a=this.children;this.toggles.forEach(function(t){return ze(t,s.cls,!!function(t,e,i){var n=i.filter;void 0===n&&(n={"":""});var r=i.sort,o=r[0],s=r[1],a=Mr(t,e),h=a.filter;void 0===h&&(h="");var c=a.group;void 0===c&&(c="");var l=a.sort,u=a.order;void 0===u&&(u="asc");return D(l)?c in n&&h===n[c]||!h&&c&&!(c in n)&&!n[""]:o===l&&s===u}(t,s.attrItem,o))});function e(){var e=function(t){var e=t.filter,i="";return X(e,function(t){return i+=t||""}),i}(o);a.forEach(function(t){return De(t,"display",e&&!xt(t,e)?"none":"")});var t=o.sort,i=t[0],n=t[1];if(i){var r=function(t,i,n){return U([],t).sort(function(t,e){return st(t,i).localeCompare(st(e,i),void 0,{numeric:!0})*("asc"===n||-1)})}(a,i,n);R(r,a)||r.forEach(function(t){return fe(s.target,t)})}}t?this.animate(e).then(function(){return Nt(s.$el,"afterFilter",[s])}):(e(),Nt(this.$el,"afterFilter",[this]))},updateState:function(){var t=this;yi.write(function(){return t.setState(t.getState(),!1)})}}};function Mr(t,e){return Ti(st(t,e),["filter"])}function Br(t,e,i){var n=Mr(t,e),r=n.filter,o=n.group,s=n.sort,a=n.order;return void 0===a&&(a="asc"),(r||D(s))&&(o?r?(delete i.filter[""],i.filter[o]=r):(delete i.filter[o],(O(i.filter)||""in i.filter)&&(i.filter={"":r||""})):i.filter={"":r||""}),D(s)||(i.sort=[s,a]),i}var Ir={slide:{show:function(t){return[{transform:Er(-100*t)},{transform:Er()}]},percent:function(t){return Sr(t)},translate:function(t,e){return[{transform:Er(-100*e*t)},{transform:Er(100*e*(1-t))}]}}};function Sr(t){return Math.abs(De(t,"transform").split(",")[4]/t.offsetWidth)||0}function Er(t,e){return void 0===t&&(t=0),void 0===e&&(e="%"),t+=t?e:"",Gt?"translateX("+t+")":"translate3d("+t+", 0, 0)"}function Tr(t){return"scale3d("+t+", "+t+", 1)"}var Ar=U({},Ir,{fade:{show:function(){return[{opacity:0},{opacity:1}]},percent:function(t){return 1-De(t,"opacity")},translate:function(t){return[{opacity:1-t},{opacity:t}]}},scale:{show:function(){return[{opacity:0,transform:Tr(.8)},{opacity:1,transform:Tr(1)}]},percent:function(t){return 1-De(t,"opacity")},translate:function(t){return[{opacity:1-t,transform:Tr(1-.2*t)},{opacity:t,transform:Tr(.8+.2*t)}]}}});function zr(t,e,i){Nt(t,Ht(e,!1,!1,i))}var _r={mixins:[{props:{autoplay:Boolean,autoplayInterval:Number,pauseOnHover:Boolean},data:{autoplay:!1,autoplayInterval:7e3,pauseOnHover:!0},connected:function(){this.autoplay&&this.startAutoplay()},disconnected:function(){this.stopAutoplay()},update:function(){nt(this.slides,"tabindex","-1")},events:[{name:"visibilitychange",el:document,filter:function(){return this.autoplay},handler:function(){document.hidden?this.stopAutoplay():this.startAutoplay()}}],methods:{startAutoplay:function(){var t=this;this.stopAutoplay(),this.interval=setInterval(function(){return(!t.draggable||!$e(":focus",t.$el))&&(!t.pauseOnHover||!xt(t.$el,":hover"))&&!t.stack.length&&t.show("next")},this.autoplayInterval)},stopAutoplay:function(){this.interval&&clearInterval(this.interval)}}},{props:{draggable:Boolean},data:{draggable:!0,threshold:10},created:function(){var n=this;["start","move","end"].forEach(function(t){var i=n[t];n[t]=function(t){var e=Ft(t).x*(Jt?-1:1);n.prevPos=e!==n.pos?n.pos:n.prevPos,n.pos=e,i(t)}})},events:[{name:ie,delegate:function(){return this.selSlides},handler:function(t){!this.draggable||!Zt(t)&&function(t){return!t.children.length&&t.childNodes.length}(t.target)||0<t.button||this.length<2||this.start(t)}},{name:"touchmove",passive:!1,handler:"move",delegate:function(){return this.selSlides}},{name:"dragstart",handler:function(t){t.preventDefault()}}],methods:{start:function(){var t=this;this.drag=this.pos,this._transitioner?(this.percent=this._transitioner.percent(),this.drag+=this._transitioner.getDistance()*this.percent*this.dir,this._transitioner.cancel(),this._transitioner.translate(this.percent),this.dragging=!0,this.stack=[]):this.prevIndex=this.index;var e="touchmove"!=ne?At(document,ne,this.move,{passive:!1}):Q;this.unbindMove=function(){e(),t.unbindMove=null},At(window,"scroll",this.unbindMove),At(document,re,this.end,!0),De(this.list,"userSelect","none")},move:function(t){var e=this;if(this.unbindMove){var i=this.pos-this.drag;if(!(0==i||this.prevPos===this.pos||!this.dragging&&Math.abs(i)<this.threshold)){De(this.list,"pointerEvents","none"),t.cancelable&&t.preventDefault(),this.dragging=!0,this.dir=i<0?1:-1;for(var n=this.slides,r=this.prevIndex,o=Math.abs(i),s=this.getIndex(r+this.dir,r),a=this._getDistance(r,s)||n[r].offsetWidth;s!==r&&a<o;)this.drag-=a*this.dir,r=s,o-=a,s=this.getIndex(r+this.dir,r),a=this._getDistance(r,s)||n[r].offsetWidth;this.percent=o/a;var h,c=n[r],l=n[s],u=this.index!==s,d=r===s;[this.index,this.prevIndex].filter(function(t){return!y([s,r],t)}).forEach(function(t){Nt(n[t],"itemhidden",[e]),d&&(h=!0,e.prevIndex=r)}),(this.index===r&&this.prevIndex!==r||h)&&Nt(n[this.index],"itemshown",[this]),u&&(this.prevIndex=r,this.index=s,d||Nt(c,"beforeitemhide",[this]),Nt(l,"beforeitemshow",[this])),this._transitioner=this._translate(Math.abs(this.percent),c,!d&&l),u&&(d||Nt(c,"itemhide",[this]),Nt(l,"itemshow",[this]))}}},end:function(){if(zt(window,"scroll",this.unbindMove),this.unbindMove&&this.unbindMove(),zt(document,re,this.end,!0),this.dragging)if(this.dragging=null,this.index===this.prevIndex)this.percent=1-this.percent,this.dir*=-1,this._show(!1,this.index,!0),this._transitioner=null;else{var t=(Jt?this.dir*(Jt?1:-1):this.dir)<0==this.prevPos>this.pos;this.index=t?this.index:this.prevIndex,t&&(this.percent=1-this.percent),this.show(0<this.dir&&!t||this.dir<0&&t?"next":"previous",!0)}De(this.list,{userSelect:"",pointerEvents:""}),this.drag=this.percent=null}}},{data:{selNav:!1},computed:{nav:function(t,e){return $e(t.selNav,e)},selNavItem:function(t){var e=t.attrItem;return"["+e+"],[data-"+e+"]"},navItems:function(t,e){return Me(this.selNavItem,e)}},update:{write:function(){var i=this;this.nav&&this.length!==this.nav.children.length&&de(this.nav,this.slides.map(function(t,e){return"<li "+i.attrItem+'="'+e+'"><a href="#"></a></li>'}).join("")),ze(Me(this.selNavItem,this.$el).concat(this.nav),"uk-hidden",!this.maxIndex),this.updateNav()},events:["resize"]},events:[{name:"click",delegate:function(){return this.selNavItem},handler:function(t){t.preventDefault(),this.show(st(t.current,this.attrItem))}},{name:"itemshow",handler:"updateNav"}],methods:{updateNav:function(){var i=this,n=this.getValidIndex();this.navItems.forEach(function(t){var e=st(t,i.attrItem);ze(t,i.clsActive,j(e)===n),ze(t,"uk-invisible",i.finite&&("previous"===e&&0===n||"next"===e&&n>=i.maxIndex))})}}}],props:{clsActivated:Boolean,easing:String,index:Number,finite:Boolean,velocity:Number},data:function(){return{easing:"ease",finite:!1,velocity:1,index:0,prevIndex:-1,stack:[],percent:0,clsActive:"uk-active",clsActivated:!1,Transitioner:!1,transitionOptions:{}}},connected:function(){this.prevIndex=-1,this.index=this.getValidIndex(this.index),this.stack=[]},disconnected:function(){Se(this.slides,this.clsActive)},computed:{duration:function(t,e){var i=t.velocity;return Nr(e.offsetWidth/i)},list:function(t,e){return $e(t.selList,e)},maxIndex:function(){return this.length-1},selSlides:function(t){return t.selList+" > *"},slides:{get:function(){return V(this.list.children)},watch:function(){this.$reset()}},length:function(){return this.slides.length}},events:{itemshown:function(){this.$update(this.list)}},methods:{show:function(t,e){var i=this;if(void 0===e&&(e=!1),!this.dragging&&this.length){var n=this.stack,r=e?0:n.length,o=function(){n.splice(r,1),n.length&&i.show(n.shift(),!0)};if(n[e?"unshift":"push"](t),!e&&1<n.length)2===n.length&&this._transitioner.forward(Math.min(this.duration,200));else{var s=this.index,a=Ae(this.slides,this.clsActive)&&this.slides[s],h=this.getIndex(t,this.index),c=this.slides[h];if(a!==c){if(this.dir=function(t,e){return"next"===t?1:"previous"===t?-1:t<e?-1:1}(t,s),this.prevIndex=s,this.index=h,a&&Nt(a,"beforeitemhide",[this]),!Nt(c,"beforeitemshow",[this,a]))return this.index=this.prevIndex,void o();var l=this._show(a,c,e).then(function(){return a&&Nt(a,"itemhidden",[i]),Nt(c,"itemshown",[i]),new Wt(function(t){yi.write(function(){n.shift(),n.length?i.show(n.shift(),!0):i._transitioner=null,t()})})});return a&&Nt(a,"itemhide",[this]),Nt(c,"itemshow",[this]),l}o()}}},getIndex:function(t,e){return void 0===t&&(t=this.index),void 0===e&&(e=this.index),J(le(t,this.slides,e,this.finite),0,this.maxIndex)},getValidIndex:function(t,e){return void 0===t&&(t=this.index),void 0===e&&(e=this.prevIndex),this.getIndex(t,e)},_show:function(t,e,i){if(this._transitioner=this._getTransitioner(t,e,this.dir,U({easing:i?e.offsetWidth<600?"cubic-bezier(0.25, 0.46, 0.45, 0.94)":"cubic-bezier(0.165, 0.84, 0.44, 1)":this.easing},this.transitionOptions)),!i&&!t)return this._transitioner.translate(1),Wt.resolve();var n=this.stack.length;return this._transitioner[1<n?"forward":"show"](1<n?Math.min(this.duration,75+75/(n-1)):this.duration,this.percent)},_getDistance:function(t,e){return new this._getTransitioner(t,t!==e&&e).getDistance()},_translate:function(t,e,i){void 0===e&&(e=this.prevIndex),void 0===i&&(i=this.index);var n=this._getTransitioner(e!==i&&e,i);return n.translate(t),n},_getTransitioner:function(t,e,i,n){return void 0===t&&(t=this.prevIndex),void 0===e&&(e=this.index),void 0===i&&(i=this.dir||1),void 0===n&&(n=this.transitionOptions),new this.Transitioner(N(t)?this.slides[t]:t,N(e)?this.slides[e]:e,i*(Jt?-1:1),n)}}};function Nr(t){return.5*t+300}var Hr={mixins:[_r],props:{animation:String},data:{animation:"slide",clsActivated:"uk-transition-active",Animations:Ir,Transitioner:function(o,s,a,t){var e=t.animation,h=t.easing,i=e.percent,n=e.translate,r=e.show;void 0===r&&(r=Q);var c=r(a),l=new Vt;return{dir:a,show:function(t,e,i){var n=this;void 0===e&&(e=0);var r=i?"linear":h;return t-=Math.round(t*J(e,-1,1)),this.translate(e),zr(s,"itemin",{percent:e,duration:t,timing:r,dir:a}),zr(o,"itemout",{percent:1-e,duration:t,timing:r,dir:a}),Wt.all([Ye.start(s,c[1],t,r),Ye.start(o,c[0],t,r)]).then(function(){n.reset(),l.resolve()},Q),l.promise},stop:function(){return Ye.stop([s,o])},cancel:function(){Ye.cancel([s,o])},reset:function(){for(var t in c[0])De([s,o],t,"")},forward:function(t,e){return void 0===e&&(e=this.percent()),Ye.cancel([s,o]),this.show(t,e,!0)},translate:function(t){this.reset();var e=n(t,a);De(s,e[1]),De(o,e[0]),zr(s,"itemtranslatein",{percent:t,dir:a}),zr(o,"itemtranslateout",{percent:1-t,dir:a})},percent:function(){return i(o||s,s,a)},getDistance:function(){return o&&o.offsetWidth}}}},computed:{animation:function(t){var e=t.animation,i=t.Animations;return U(e in i?i[e]:i.slide,{name:e})},transitionOptions:function(){return{animation:this.animation}}},events:{"itemshow itemhide itemshown itemhidden":function(t){var e=t.target;this.$update(e)},beforeitemshow:function(t){Ie(t.target,this.clsActive)},itemshown:function(t){Ie(t.target,this.clsActivated)},itemhidden:function(t){Se(t.target,this.clsActive,this.clsActivated)}}},Or={mixins:[Qn,tr,tn,Hr],functional:!0,props:{delayControls:Number,preload:Number,videoAutoplay:Boolean,template:String},data:function(){return{preload:1,videoAutoplay:!1,delayControls:3e3,items:[],cls:"uk-open",clsPage:"uk-lightbox-page",selList:".uk-lightbox-items",attrItem:"uk-lightbox-item",selClose:".uk-close-large",selCaption:".uk-lightbox-caption",pauseOnHover:!1,velocity:2,Animations:Ar,template:'<div class="uk-lightbox uk-overflow-hidden"> <ul class="uk-lightbox-items"></ul> <div class="uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque"> <button class="uk-lightbox-toolbar-icon uk-close-large" type="button" uk-close></button> </div> <a class="uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade" href="#" uk-slidenav-previous uk-lightbox-item="previous"></a> <a class="uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade" href="#" uk-slidenav-next uk-lightbox-item="next"></a> <div class="uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque"></div> </div>'}},created:function(){var t=$e(this.template),e=$e(this.selList,t);this.items.forEach(function(){return fe(e,"<li></li>")}),this.$mount(fe(this.container,t))},computed:{caption:function(t,e){t.selCaption;return $e(".uk-lightbox-caption",e)}},events:[{name:ne+" "+ie+" keydown",handler:"showControls"},{name:"click",self:!0,delegate:function(){return this.selSlides},handler:function(t){t.defaultPrevented||this.hide()}},{name:"shown",self:!0,handler:function(){this.showControls()}},{name:"hide",self:!0,handler:function(){this.hideControls(),Se(this.slides,this.clsActive),Ye.stop(this.slides)}},{name:"hidden",self:!0,handler:function(){this.$destroy(!0)}},{name:"keyup",el:document,handler:function(t){if(this.isToggled(this.$el))switch(t.keyCode){case 37:this.show("previous");break;case 39:this.show("next")}}},{name:"beforeitemshow",handler:function(t){this.isToggled()||(this.draggable=!1,t.preventDefault(),this.toggleNow(this.$el,!0),this.animation=Ar.scale,Se(t.target,this.clsActive),this.stack.splice(1,0,this.index))}},{name:"itemshow",handler:function(t){var e=ce(t.target),i=this.getItem(e).caption;De(this.caption,"display",i?"":"none"),de(this.caption,i);for(var n=0;n<=this.preload;n++)this.loadItem(this.getIndex(e+n)),this.loadItem(this.getIndex(e-n))}},{name:"itemshown",handler:function(){this.draggable=this.$props.draggable}},{name:"itemload",handler:function(t,r){var o,s=this,e=r.source,i=r.type,n=r.alt;if(this.setItem(r,"<span uk-spinner></span>"),e)if("image"===i||e.match(/\.(jp(e)?g|png|gif|svg|webp)($|\?)/i))Kt(e).then(function(t){return s.setItem(r,'<img width="'+t.width+'" height="'+t.height+'" src="'+e+'" alt="'+(n||"")+'">')},function(){return s.setError(r)});else if("video"===i||e.match(/\.(mp4|webm|ogv)($|\?)/i)){var a=$e("<video controls playsinline"+(r.poster?' poster="'+r.poster+'"':"")+' uk-video="'+this.videoAutoplay+'"></video>');nt(a,"src",e),_t(a,"error loadedmetadata",function(t){"error"===t?s.setError(r):(nt(a,{width:a.videoWidth,height:a.videoHeight}),s.setItem(r,a))})}else if("iframe"===i||e.match(/\.(html|php)($|\?)/i))this.setItem(r,'<iframe class="uk-lightbox-iframe" src="'+e+'" frameborder="0" allowfullscreen></iframe>');else if(o=e.match(/\/\/.*?youtube(-nocookie)?\.[a-z]+\/watch\?v=([^&\s]+)/)||e.match(/()youtu\.be\/(.*)/)){var h=o[2],c=function(t,e){return void 0===t&&(t=640),void 0===e&&(e=450),s.setItem(r,Dr("https://www.youtube"+(o[1]||"")+".com/embed/"+h,t,e,s.videoAutoplay))};Kt("https://img.youtube.com/vi/"+h+"/maxresdefault.jpg").then(function(t){var e=t.width,i=t.height;120===e&&90===i?Kt("https://img.youtube.com/vi/"+h+"/0.jpg").then(function(t){var e=t.width,i=t.height;return c(e,i)},c):c(e,i)},c)}else(o=e.match(/(\/\/.*?)vimeo\.[a-z]+\/([0-9]+).*?/))&&Xt("https://vimeo.com/api/oembed.json?maxwidth=1920&url="+encodeURI(e),{responseType:"json",withCredentials:!1}).then(function(t){var e=t.response,i=e.height,n=e.width;return s.setItem(r,Dr("https://player.vimeo.com/video/"+o[2],n,i,s.videoAutoplay))},function(){return s.setError(r)})}}],methods:{loadItem:function(t){void 0===t&&(t=this.index);var e=this.getItem(t);e.content||Nt(this.$el,"itemload",[e])},getItem:function(t){return void 0===t&&(t=this.index),this.items[t]||{}},setItem:function(t,e){U(t,{content:e});var i=de(this.slides[this.items.indexOf(t)],e);Nt(this.$el,"itemloaded",[this,i]),this.$update(i)},setError:function(t){this.setItem(t,'<span uk-icon="icon: bolt; ratio: 2"></span>')},showControls:function(){clearTimeout(this.controlsTimer),this.controlsTimer=setTimeout(this.hideControls,this.delayControls),Ie(this.$el,"uk-active","uk-transition-active")},hideControls:function(){Se(this.$el,"uk-active","uk-transition-active")}}};function Dr(t,e,i,n){return'<iframe src="'+t+'" width="'+e+'" height="'+i+'" style="max-width: 100%; box-sizing: border-box;" frameborder="0" allowfullscreen uk-video="autoplay: '+n+'" uk-responsive></iframe>'}var Pr,jr={install:function(t,e){t.lightboxPanel||t.component("lightboxPanel",Or);U(e.props,t.component("lightboxPanel").options.props)},props:{toggle:String},data:{toggle:"a"},computed:{toggles:{get:function(t,e){return Me(t.toggle,e)},watch:function(){this.hide()}},items:function(){return G(this.toggles.map(Zr),"source")}},disconnected:function(){this.hide()},events:[{name:"click",delegate:function(){return this.toggle+":not(.uk-disabled)"},handler:function(t){t.preventDefault();var e=st(t.current,"href");this.show(k(this.items,function(t){return t.source===e}))}}],methods:{show:function(t){var e=this;return this.panel=this.panel||this.$create("lightboxPanel",U({},this.$props,{items:this.items})),At(this.panel.$el,"hidden",function(){return e.panel=!1}),this.panel.show(t)},hide:function(){return this.panel&&this.panel.hide()}}};function Zr(i){return["href","caption","type","poster","alt"].reduce(function(t,e){return t["href"===e?"source":e]=st(i,e),t},{})}var Fr={},Vr={functional:!0,args:["message","status"],data:{message:"",status:"",timeout:5e3,group:null,pos:"top-center",clsClose:"uk-notification-close",clsMsg:"uk-notification-message"},install:function(r){r.notification.closeAll=function(i,n){Le(document.body,function(t){var e=r.getComponent(t,"notification");!e||i&&i!==e.group||e.close(n)})}},computed:{marginProp:function(t){return"margin"+(w(t.pos,"top")?"Top":"Bottom")},startProps:function(){var t;return(t={opacity:0})[this.marginProp]=-this.$el.offsetHeight,t}},created:function(){Fr[this.pos]||(Fr[this.pos]=fe(this.$container,'<div class="uk-notification uk-notification-'+this.pos+'"></div>'));var t=De(Fr[this.pos],"display","block");this.$mount(fe(t,'<div class="'+this.clsMsg+(this.status?" "+this.clsMsg+"-"+this.status:"")+'"> <a href="#" class="'+this.clsClose+'" data-uk-close></a> <div>'+this.message+"</div> </div>"))},connected:function(){var t,e=this,i=Z(De(this.$el,this.marginProp));Ye.start(De(this.$el,this.startProps),((t={opacity:1})[this.marginProp]=i,t)).then(function(){e.timeout&&(e.timer=setTimeout(e.close,e.timeout))})},events:(Pr={click:function(t){bt(t.target,'a[href="#"],a[href=""]')&&t.preventDefault(),this.close()}},Pr[oe]=function(){this.timer&&clearTimeout(this.timer)},Pr[se]=function(){this.timeout&&(this.timer=setTimeout(this.close,this.timeout))},Pr),methods:{close:function(t){function e(){Nt(i.$el,"close",[i]),me(i.$el),Fr[i.pos].children.length||De(Fr[i.pos],"display","none")}var i=this;this.timer&&clearTimeout(this.timer),t?e():Ye.start(this.$el,this.startProps).then(e)}}};var Wr=["x","y","bgx","bgy","rotate","scale","color","backgroundColor","borderColor","opacity","blur","hue","grayscale","invert","saturate","sepia","fopacity","stroke"],qr={mixins:[Xn],props:Wr.reduce(function(t,e){return t[e]="list",t},{}),data:Wr.reduce(function(t,e){return t[e]=void 0,t},{}),computed:{props:function(p,v){var m=this;return Wr.reduce(function(t,e){if(D(p[e]))return t;var i,n,r,o=e.match(/color/i),s=o||"opacity"===e,a=p[e].slice(0);s&&De(v,e,""),a.length<2&&a.unshift(("scale"===e?1:s?De(v,e):0)||0);var h=function(t){return t.reduce(function(t,e){return _(e)&&e.replace(/-|\d/g,"").trim()||t},"")}(a);if(o){var c=v.style.color;a=a.map(function(t){return function(t,e){return De(De(t,"color",e),"color").split(/[(),]/g).slice(1,-1).concat(1).slice(0,4).map(Z)}(v,t)}),v.style.color=c}else if(w(e,"bg")){var l="bgy"===e?"height":"width";if(a=a.map(function(t){return vi(t,l,m.$el)}),De(v,"background-position-"+e[2],""),n=De(v,"backgroundPosition").split(" ")["x"===e[2]?0:1],m.covers){var u=Math.min.apply(Math,a),d=Math.max.apply(Math,a),f=a.indexOf(u)<a.indexOf(d);r=d-u,a=a.map(function(t){return t-(f?u:d)}),i=(f?-r:0)+"px"}else i=n}else a=a.map(Z);if("stroke"===e){if(!a.some(function(t){return t}))return t;var g=In(m.$el);De(v,"strokeDasharray",g),"%"===h&&(a=a.map(function(t){return t*g/100})),a=a.reverse(),e="strokeDashoffset"}return t[e]={steps:a,unit:h,pos:i,bgPos:n,diff:r},t},{})},bgProps:function(){var e=this;return["bgx","bgy"].filter(function(t){return t in e.props})},covers:function(t,e){return function(t){var e=t.style.backgroundSize,i="cover"===De(De(t,"backgroundSize",""),"backgroundSize");return t.style.backgroundSize=e,i}(e)}},disconnected:function(){delete this._image},update:{read:function(t){var h=this;if(t.active=this.matchMedia,t.active){if(!t.image&&this.covers&&this.bgProps.length){var e=De(this.$el,"backgroundImage").replace(/^none|url\(["']?(.+?)["']?\)$/,"$1");if(e){var i=new Image;i.src=e,(t.image=i).naturalWidth||(i.onload=function(){return h.$emit()})}}var n=t.image;if(n&&n.naturalWidth){var c={width:this.$el.offsetWidth,height:this.$el.offsetHeight},l={width:n.naturalWidth,height:n.naturalHeight},u=it.cover(l,c);this.bgProps.forEach(function(t){var e=h.props[t],i=e.diff,n=e.bgPos,r=e.steps,o="bgy"===t?"height":"width",s=u[o]-c[o];if(s<i)c[o]=u[o]+i-s;else if(i<s){var a=c[o]/vi(n,o,h.$el);a&&(h.props[t].steps=r.map(function(t){return t-(s-i)/a}))}u=it.cover(l,c)}),t.dim=u}}},write:function(t){var e=t.dim;t.active?e&&De(this.$el,{backgroundSize:e.width+"px "+e.height+"px",backgroundRepeat:"no-repeat"}):De(this.$el,{backgroundSize:"",backgroundRepeat:""})},events:["resize"]},methods:{reset:function(){var i=this;X(this.getCss(0),function(t,e){return De(i.$el,e,"")})},getCss:function(u){var d=this.props;return Object.keys(d).reduce(function(t,e){var i=d[e],n=i.steps,r=i.unit,o=i.pos,s=function(t,e,i){void 0===i&&(i=2);var n=Rr(t,e),r=n[0],o=n[1],s=n[2];return(N(r)?r+Math.abs(r-o)*s*(r<o?1:-1):+o).toFixed(i)}(n,u);switch(e){case"x":case"y":r=r||"px",t.transform+=" translate"+g(e)+"("+Z(s).toFixed("px"===r?0:2)+r+")";break;case"rotate":r=r||"deg",t.transform+=" rotate("+(s+r)+")";break;case"scale":t.transform+=" scale("+s+")";break;case"bgy":case"bgx":t["background-position-"+e[2]]="calc("+o+" + "+s+"px)";break;case"color":case"backgroundColor":case"borderColor":var a=Rr(n,u),h=a[0],c=a[1],l=a[2];t[e]="rgba("+h.map(function(t,e){return t+=l*(c[e]-t),3===e?Z(t):parseInt(t,10)}).join(",")+")";break;case"blur":r=r||"px",t.filter+=" blur("+(s+r)+")";break;case"hue":r=r||"deg",t.filter+=" hue-rotate("+(s+r)+")";break;case"fopacity":r=r||"%",t.filter+=" opacity("+(s+r)+")";break;case"grayscale":case"invert":case"saturate":case"sepia":r=r||"%",t.filter+=" "+e+"("+(s+r)+")";break;default:t[e]=s}return t},{transform:"",filter:""})}}};function Rr(t,e){var i=t.length-1,n=Math.min(Math.floor(i*e),i-1),r=t.slice(n,n+2);return r.push(1===e?1:e%(1/i)*i),r}var Yr={mixins:[qr],props:{target:String,viewport:Number,easing:Number},data:{target:!1,viewport:1,easing:1},computed:{target:function(t,e){var i=t.target;return function t(e){return e?"offsetTop"in e?e:t(e.parentNode):document.body}(i&&at(i,e)||e)}},update:{read:function(t,e){var i=t.percent;if("scroll"!==e&&(i=!1),t.active){var n=i;return{percent:i=function(t,e){return J(t*(1-(e-e*t)))}(fi(this.target)/(this.viewport||1),this.easing),style:n!==i&&this.getCss(i)}}},write:function(t){var e=t.style;t.active?e&&De(this.$el,e):this.reset()},events:["scroll","resize"]}};var Ur={update:{write:function(){if(!this.stack.length&&!this.dragging){var t=this.getValidIndex(this.index);~this.prevIndex&&this.index===t||this.show(t)}},events:["resize"]}};function Xr(t,e,i){var n=Jr(t,e);return i?n-function(t,e){return Qr(e).width/2-Qr(t).width/2}(t,e):Math.min(n,Kr(e))}function Kr(t){return Math.max(0,Gr(t)-Qr(t).width)}function Gr(t){return eo(t).reduce(function(t,e){return Qr(e).width+t},0)}function Jr(t,e){return(ni(t).left+(Jt?Qr(t).width-Qr(e).width:0))*(Jt?-1:1)}function Qr(t){return t.getBoundingClientRect()}function to(t,e,i){Nt(t,Ht(e,!1,!1,i))}function eo(t){return V(t.children)}var io={mixins:[Qi,_r,Ur],props:{center:Boolean,sets:Boolean},data:{center:!1,sets:!1,attrItem:"uk-slider-item",selList:".uk-slider-items",selNav:".uk-slider-nav",clsContainer:"uk-slider-container",Transitioner:function(r,n,o,t){var e=t.center,s=t.easing,a=t.list,h=new Vt,i=r?Xr(r,a,e):Xr(n,a,e)+Qr(n).width*o,c=n?Xr(n,a,e):i+Qr(r).width*o*(Jt?-1:1);return{dir:o,show:function(t,e,i){void 0===e&&(e=0);var n=i?"linear":s;return t-=Math.round(t*J(e,-1,1)),this.translate(e),r&&this.updateTranslates(),e=r?e:J(e,0,1),to(this.getItemIn(),"itemin",{percent:e,duration:t,timing:n,dir:o}),r&&to(this.getItemIn(!0),"itemout",{percent:1-e,duration:t,timing:n,dir:o}),Ye.start(a,{transform:Er(-c*(Jt?-1:1),"px")},t,n).then(h.resolve,Q),h.promise},stop:function(){return Ye.stop(a)},cancel:function(){Ye.cancel(a)},reset:function(){De(a,"transform","")},forward:function(t,e){return void 0===e&&(e=this.percent()),Ye.cancel(a),this.show(t,e,!0)},translate:function(t){var e=this.getDistance()*o*(Jt?-1:1);De(a,"transform",Er(J(e-e*t-c,-Gr(a),Qr(a).width)*(Jt?-1:1),"px")),this.updateTranslates(),r&&(t=J(t,-1,1),to(this.getItemIn(),"itemtranslatein",{percent:t,dir:o}),to(this.getItemIn(!0),"itemtranslateout",{percent:1-t,dir:o}))},percent:function(){return Math.abs((De(a,"transform").split(",")[4]*(Jt?-1:1)+i)/(c-i))},getDistance:function(){return Math.abs(c-i)},getItemIn:function(t){void 0===t&&(t=!1);var e=this.getActives(),i=K(eo(a),"offsetLeft"),n=ce(i,e[0<o*(t?-1:1)?e.length-1:0]);return~n&&i[n+(r&&!t?o:0)]},getActives:function(){var i=Xr(r||n,a,e);return K(eo(a).filter(function(t){var e=Jr(t,a);return i<=e&&e+Qr(t).width<=Qr(a).width+i}),"offsetLeft")},updateTranslates:function(){var i=this.getActives();eo(a).forEach(function(t){var e=y(i,t);to(t,"itemtranslate"+(e?"in":"out"),{percent:e?1:0,dir:t.offsetLeft<=n.offsetLeft?1:-1})})}}}},computed:{avgWidth:function(){return Gr(this.list)/this.length},finite:function(t){return t.finite||Gr(this.list)<Qr(this.list).width+function(t){return eo(t).reduce(function(t,e){return Math.max(t,Qr(e).width)},0)}(this.list)+this.center},maxIndex:function(){if(!this.finite||this.center&&!this.sets)return this.length-1;if(this.center)return this.sets[this.sets.length-1];De(this.slides,"order","");for(var t=Kr(this.list),e=this.length;e--;)if(Jr(this.list.children[e],this.list)<t)return Math.min(e+1,this.length-1);return 0},sets:function(t){var o=this,e=t.sets,s=Qr(this.list).width/(this.center?2:1),a=0,h=s,c=0;return!O(e=e&&this.slides.reduce(function(t,e,i){var n=Qr(e).width;if(a<c+n&&(!o.center&&i>o.maxIndex&&(i=o.maxIndex),!y(t,i))){var r=o.slides[i+1];o.center&&r&&n<h-Qr(r).width/2?h-=n:(h=s,t.push(i),a=c+s+(o.center?n/2:0))}return c+=n,t},[]))&&e},transitionOptions:function(){return{center:this.center,list:this.list}}},connected:function(){ze(this.$el,this.clsContainer,!$e("."+this.clsContainer,this.$el))},update:{write:function(){var i=this;Me("["+this.attrItem+"],[data-"+this.attrItem+"]",this.$el).forEach(function(t){var e=st(t,i.attrItem);i.maxIndex&&ze(t,"uk-hidden",H(e)&&(i.sets&&!y(i.sets,Z(e))||e>i.maxIndex))}),this.dragging||this.stack.length||this._getTransitioner().translate(1)},events:["resize"]},events:{beforeitemshow:function(t){!this.dragging&&this.sets&&this.stack.length<2&&!y(this.sets,this.index)&&(this.index=this.getValidIndex());var e=Math.abs(this.index-this.prevIndex+(0<this.dir&&this.index<this.prevIndex||this.dir<0&&this.index>this.prevIndex?(this.maxIndex+1)*this.dir:0));if(!this.dragging&&1<e){for(var i=0;i<e;i++)this.stack.splice(1,0,0<this.dir?"next":"previous");t.preventDefault()}else this.duration=Nr(this.avgWidth/this.velocity)*(Qr(this.dir<0||!this.slides[this.prevIndex]?this.slides[this.index]:this.slides[this.prevIndex]).width/this.avgWidth),this.reorder()},itemshow:function(){D(this.prevIndex)||Ie(this._getTransitioner().getItemIn(),this.clsActive)},itemshown:function(){var e=this,i=this._getTransitioner(this.index).getActives();this.slides.forEach(function(t){return ze(t,e.clsActive,y(i,t))}),this.sets&&!y(this.sets,Z(this.index))||this.slides.forEach(function(t){return ze(t,e.clsActivated,y(i,t))})}},methods:{reorder:function(){var i=this;if(De(this.slides,"order",""),!this.finite){var n=0<this.dir&&this.slides[this.prevIndex]?this.prevIndex:this.index;if(this.slides.forEach(function(t,e){return De(t,"order",0<i.dir&&e<n?1:i.dir<0&&e>=i.index?-1:"")}),this.center)for(var t=this.slides[n],e=Qr(this.list).width/2-Qr(t).width/2,r=0;0<e;){var o=this.getIndex(--r+n,n),s=this.slides[o];De(s,"order",n<o?-2:-1),e-=Qr(s).width}}},getValidIndex:function(t,e){if(void 0===t&&(t=this.index),void 0===e&&(e=this.prevIndex),t=this.getIndex(t,e),!this.sets)return t;var i;do{if(y(this.sets,t))return t;i=t,t=this.getIndex(t+this.dir,e)}while(t!==i);return t}}},no={mixins:[qr],data:{selItem:"!li"},computed:{item:function(t,e){return at(t.selItem,e)}},events:[{name:"itemshown",self:!0,el:function(){return this.item},handler:function(){De(this.$el,this.getCss(.5))}},{name:"itemin itemout",self:!0,el:function(){return this.item},handler:function(t){var e=t.type,i=t.detail,n=i.percent,r=i.duration,o=i.timing,s=i.dir;Ye.cancel(this.$el),De(this.$el,this.getCss(oo(e,s,n))),Ye.start(this.$el,this.getCss(ro(e)?.5:0<s?1:0),r,o).catch(Q)}},{name:"transitioncanceled transitionend",self:!0,el:function(){return this.item},handler:function(){Ye.cancel(this.$el)}},{name:"itemtranslatein itemtranslateout",self:!0,el:function(){return this.item},handler:function(t){var e=t.type,i=t.detail,n=i.percent,r=i.dir;Ye.cancel(this.$el),De(this.$el,this.getCss(oo(e,r,n)))}}]};function ro(t){return l(t,"in")}function oo(t,e,i){return i/=2,ro(t)?e<0?1-i:i:e<0?i:1-i}var so,ao=U({},Ir,{fade:{show:function(){return[{opacity:0,zIndex:0},{zIndex:-1}]},percent:function(t){return 1-De(t,"opacity")},translate:function(t){return[{opacity:1-t,zIndex:0},{zIndex:-1}]}},scale:{show:function(){return[{opacity:0,transform:Tr(1.5),zIndex:0},{zIndex:-1}]},percent:function(t){return 1-De(t,"opacity")},translate:function(t){return[{opacity:1-t,transform:Tr(1+.5*t),zIndex:0},{zIndex:-1}]}},pull:{show:function(t){return t<0?[{transform:Er(30),zIndex:-1},{transform:Er(),zIndex:0}]:[{transform:Er(-100),zIndex:0},{transform:Er(),zIndex:-1}]},percent:function(t,e,i){return i<0?1-Sr(e):Sr(t)},translate:function(t,e){return e<0?[{transform:Er(30*t),zIndex:-1},{transform:Er(-100*(1-t)),zIndex:0}]:[{transform:Er(100*-t),zIndex:0},{transform:Er(30*(1-t)),zIndex:-1}]}},push:{show:function(t){return t<0?[{transform:Er(100),zIndex:0},{transform:Er(),zIndex:-1}]:[{transform:Er(-30),zIndex:-1},{transform:Er(),zIndex:0}]},percent:function(t,e,i){return 0<i?1-Sr(e):Sr(t)},translate:function(t,e){return e<0?[{transform:Er(100*t),zIndex:0},{transform:Er(-30*(1-t)),zIndex:-1}]:[{transform:Er(-30*t),zIndex:-1},{transform:Er(100*(1-t)),zIndex:0}]}}}),ho={mixins:[Qi,Hr,Ur],props:{ratio:String,minHeight:Number,maxHeight:Number},data:{ratio:"16:9",minHeight:!1,maxHeight:!1,selList:".uk-slideshow-items",attrItem:"uk-slideshow-item",selNav:".uk-slideshow-nav",Animations:ao},update:{read:function(){var t=this.ratio.split(":").map(Number),e=t[0],i=t[1];return i=i*this.list.offsetWidth/e||0,this.minHeight&&(i=Math.max(this.minHeight,i)),this.maxHeight&&(i=Math.min(this.maxHeight,i)),{height:i-ai(this.list,"content-box")}},write:function(t){var e=t.height;De(this.list,"minHeight",e)},events:["resize"]}},co={mixins:[Qi,br],props:{group:String,threshold:Number,clsItem:String,clsPlaceholder:String,clsDrag:String,clsDragState:String,clsBase:String,clsNoDrag:String,clsEmpty:String,clsCustom:String,handle:String},data:{group:!1,threshold:5,clsItem:"uk-sortable-item",clsPlaceholder:"uk-sortable-placeholder",clsDrag:"uk-sortable-drag",clsDragState:"uk-drag",clsBase:"uk-sortable",clsNoDrag:"uk-sortable-nodrag",clsEmpty:"uk-sortable-empty",clsCustom:"",handle:!1},created:function(){var o=this;["init","start","move","end"].forEach(function(t){var r=o[t];o[t]=function(t){o.scrollY=window.pageYOffset;var e=Ft(t,"page"),i=e.x,n=e.y;o.pos={x:i,y:n},r(t)}})},events:{name:ie,passive:!1,handler:"init"},update:{write:function(){if(this.clsEmpty&&ze(this.$el,this.clsEmpty,O(this.$el.children)),De(this.handle?Me(this.handle,this.$el):this.$el.children,{touchAction:"none",userSelect:"none"}),this.drag){var t=ei(window),e=t.right,i=t.bottom;ei(this.drag,{top:J(this.pos.y+this.origin.top,0,i-this.drag.offsetHeight),left:J(this.pos.x+this.origin.left,0,e-this.drag.offsetWidth)}),function s(t){var a=t.x;var h=t.y;clearTimeout(so);(e=document.elementFromPoint(a-window.pageXOffset,h-window.pageYOffset),i=fo(),function(t,e){var i=[];for(;e(t)&&i.unshift(t),t=t&&t.parentElement;);return i}(e,function(t){return t===i||uo.test(De(t,"overflow"))})).some(function(t){var e=t.scrollTop,i=t.scrollHeight;fo()===t&&(t=window,i-=window.innerHeight);var n=ei(t),r=n.top,o=n.bottom;if(r<h&&h<r+30?e-=5:h<o&&o-20<h&&(e+=5),0<e&&e<i)return so=setTimeout(function(){gi(t,e),s({x:a,y:h})},10)});var e,i}(this.pos)}}},methods:{init:function(t){var e=t.target,i=t.button,n=t.defaultPrevented,r=V(this.$el.children).filter(function(t){return Tt(e,t)})[0];!r||n||0<i||St(e)||Tt(e,"."+this.clsNoDrag)||this.handle&&!Tt(e,this.handle)||(t.preventDefault(),this.touched=[this],this.placeholder=r,this.origin=U({target:e,index:ce(r)},this.pos),At(document,ne,this.move),At(document,re,this.end),At(window,"scroll",this.scroll),this.threshold||this.start(t))},start:function(t){this.drag=fe(this.$container,this.placeholder.outerHTML.replace(/^<li/i,"<div").replace(/li>$/i,"div>")),De(this.drag,U({boxSizing:"border-box",width:this.placeholder.offsetWidth,height:this.placeholder.offsetHeight,overflow:"hidden"},De(this.placeholder,["paddingLeft","paddingRight","paddingTop","paddingBottom"]))),nt(this.drag,"uk-no-boot",""),Ie(this.drag,this.clsDrag,this.clsCustom),ri(this.drag.firstElementChild,ri(this.placeholder.firstElementChild));var e=ei(this.placeholder),i=e.left,n=e.top;U(this.origin,{left:i-this.pos.x,top:n-this.pos.y}),Ie(this.placeholder,this.clsPlaceholder),Ie(this.$el.children,this.clsItem),Ie(document.documentElement,this.clsDragState),Nt(this.$el,"start",[this,this.placeholder]),this.move(t)},move:function(t){if(this.drag){this.$emit();var e="mousemove"===t.type?t.target:document.elementFromPoint(this.pos.x-window.pageXOffset,this.pos.y-window.pageYOffset),i=this.getSortable(e),n=this.getSortable(this.placeholder),r=i!==n;if(i&&!Tt(e,this.placeholder)&&(!r||i.group&&i.group===n.group)){if(e=i.$el===e.parentNode&&e||V(i.$el.children).filter(function(t){return Tt(e,t)})[0],r)n.remove(this.placeholder);else if(!e)return;i.insert(this.placeholder,e),y(this.touched,i)||this.touched.push(i)}}else(Math.abs(this.pos.x-this.origin.x)>this.threshold||Math.abs(this.pos.y-this.origin.y)>this.threshold)&&this.start(t)},end:function(t){if(zt(document,ne,this.move),zt(document,re,this.end),zt(window,"scroll",this.scroll),this.drag){clearTimeout(so);var e=this.getSortable(this.placeholder);this===e?this.origin.index!==ce(this.placeholder)&&Nt(this.$el,"moved",[this,this.placeholder]):(Nt(e.$el,"added",[e,this.placeholder]),Nt(this.$el,"removed",[this,this.placeholder])),Nt(this.$el,"stop",[this,this.placeholder]),me(this.drag),this.drag=null;var i=this.touched.map(function(t){return t.clsPlaceholder+" "+t.clsItem}).join(" ");this.touched.forEach(function(t){return Se(t.$el.children,i)}),Se(document.documentElement,this.clsDragState)}else"touchend"===t.type&&t.target.click()},scroll:function(){var t=window.pageYOffset;t!==this.scrollY&&(this.pos.y+=t-this.scrollY,this.scrollY=t,this.$emit())},insert:function(t,e){var i=this;Ie(this.$el.children,this.clsItem);function n(){e?!Tt(t,i.$el)||function(t,e){return t.parentNode===e.parentNode&&ce(t)>ce(e)}(t,e)?ge(e,t):pe(e,t):fe(i.$el,t)}this.animation?this.animate(n):n()},remove:function(t){Tt(t,this.$el)&&(De(this.handle?Me(this.handle,t):t,{touchAction:"",userSelect:""}),this.animation?this.animate(function(){return me(t)}):me(t))},getSortable:function(t){return t&&(this.$getComponent(t,"sortable")||this.getSortable(t.parentNode))}}};var lo,uo=/(auto|scroll)/;function fo(){return document.scrollingElement||document.documentElement}var go,po,vo,mo=[],wo={mixins:[Qn,tn,cn],args:"title",props:{delay:Number,title:String},data:{pos:"top",title:"",delay:0,animation:["uk-animation-scale-up"],duration:100,cls:"uk-active",clsPos:"uk-tooltip"},beforeConnect:function(){this._hasTitle=rt(this.$el,"title"),nt(this.$el,{title:"","aria-expanded":!1})},disconnected:function(){this.hide(),nt(this.$el,{title:this._hasTitle?this.title:null,"aria-expanded":null})},methods:{show:function(){var e=this;this.isActive()||(mo.forEach(function(t){return t.hide()}),mo.push(this),this._unbind=At(document,re,function(t){return!Tt(t.target,e.$el)&&e.hide()}),clearTimeout(this.showTimer),this.showTimer=setTimeout(function(){e._show(),e.hideTimer=setInterval(function(){Bt(e.$el)||e.hide()},150)},this.delay))},hide:function(){this.isActive()&&!xt(this.$el,"input:focus")&&(mo.splice(mo.indexOf(this),1),clearTimeout(this.showTimer),clearInterval(this.hideTimer),nt(this.$el,"aria-expanded",!1),this.toggleElement(this.tooltip,!1),this.tooltip&&me(this.tooltip),this.tooltip=!1,this._unbind())},_show:function(){this.tooltip=fe(this.container,'<div class="'+this.clsPos+'" aria-expanded="true" aria-hidden> <div class="'+this.clsPos+'-inner">'+this.title+"</div> </div>"),this.positionAt(this.tooltip,this.$el),this.origin="y"===this.getAxis()?ui(this.dir)+"-"+this.align:this.align+"-"+ui(this.dir),this.toggleElement(this.tooltip,!0)},isActive:function(){return y(mo,this)}},events:(lo={focus:"show",blur:"hide"},lo[oe+" "+se]=function(t){Zt(t)||(t.type===oe?this.show():this.hide())},lo[ie]=function(t){Zt(t)&&(this.isActive()?this.hide():this.show())},lo)},xo={props:{allow:String,clsDragover:String,concurrent:Number,maxSize:Number,method:String,mime:String,msgInvalidMime:String,msgInvalidName:String,msgInvalidSize:String,multiple:Boolean,name:String,params:Object,type:String,url:String},data:{allow:!1,clsDragover:"uk-dragover",concurrent:1,maxSize:0,method:"POST",mime:!1,msgInvalidMime:"Invalid File Type: %s",msgInvalidName:"Invalid File Name: %s",msgInvalidSize:"Invalid File Size: %s Kilobytes Max",multiple:!1,name:"files[]",params:{},type:"",url:"",abort:Q,beforeAll:Q,beforeSend:Q,complete:Q,completeAll:Q,error:Q,fail:Q,load:Q,loadEnd:Q,loadStart:Q,progress:Q},events:{change:function(t){xt(t.target,'input[type="file"]')&&(t.preventDefault(),t.target.files&&this.upload(t.target.files),t.target.value="")},drop:function(t){bo(t);var e=t.dataTransfer;e&&e.files&&(Se(this.$el,this.clsDragover),this.upload(e.files))},dragenter:function(t){bo(t)},dragover:function(t){bo(t),Ie(this.$el,this.clsDragover)},dragleave:function(t){bo(t),Se(this.$el,this.clsDragover)}},methods:{upload:function(t){var n=this;if(t.length){Nt(this.$el,"upload",[t]);for(var e=0;e<t.length;e++){if(this.maxSize&&1e3*this.maxSize<t[e].size)return void this.fail(this.msgInvalidSize.replace("%s",this.maxSize));if(this.allow&&!yo(this.allow,t[e].name))return void this.fail(this.msgInvalidName.replace("%s",this.allow));if(this.mime&&!yo(this.mime,t[e].type))return void this.fail(this.msgInvalidMime.replace("%s",this.mime))}this.multiple||(t=[t[0]]),this.beforeAll(this,t);var r=function(t,e){for(var i=[],n=0;n<t.length;n+=e){for(var r=[],o=0;o<e;o++)r.push(t[n+o]);i.push(r)}return i}(t,this.concurrent),o=function(t){var e=new FormData;for(var i in t.forEach(function(t){return e.append(n.name,t)}),n.params)e.append(i,n.params[i]);Xt(n.url,{data:e,method:n.method,responseType:n.type,beforeSend:function(t){var e=t.xhr;e.upload&&At(e.upload,"progress",n.progress),["loadStart","load","loadEnd","abort"].forEach(function(t){return At(e,t.toLowerCase(),n[t])}),n.beforeSend(t)}}).then(function(t){n.complete(t),r.length?o(r.shift()):n.completeAll(t)},function(t){return n.error(t)})};o(r.shift())}}}};function yo(t,e){return e.match(new RegExp("^"+t.replace(/\//g,"\\/").replace(/\*\*/g,"(\\/[^\\/]+)*").replace(/\*/g,"[^\\/]+").replace(/((?!\\))\?/g,"$1.")+"$","i"))}function bo(t){t.preventDefault(),t.stopPropagation()}function ko(){Lo(document.body,po),yi.flush(),new MutationObserver(function(t){return t.forEach(Co)}).observe(document,{childList:!0,subtree:!0,characterData:!0,attributes:!0}),go._initialized=!0}function Co(t){var e=t.target;("attributes"!==t.type?function(t){for(var e=t.addedNodes,i=t.removedNodes,n=0;n<e.length;n++)Lo(e[n],po);for(var r=0;r<i.length;r++)Lo(i[r],vo);return!0}(t):function(t){var e=t.target,i=t.attributeName;if("href"===i)return!0;var n=Hi(i);if(!(n&&n in go))return;if(rt(e,i))return go[n](e),!0;var r=go.getComponent(e,n);if(r)return r.$destroy(),!0}(t))&&go.update(e)}function Lo(t,e){if(1===t.nodeType&&!rt(t,"uk-no-boot"))for(e(t),t=t.firstElementChild;t;){var i=t.nextElementSibling;Lo(t,e),t=i}}return Oi.component("countdown",wr),Oi.component("filter",$r),Oi.component("lightbox",jr),Oi.component("lightboxPanel",Or),Oi.component("notification",Vr),Oi.component("parallax",Yr),Oi.component("slider",io),Oi.component("sliderParallax",no),Oi.component("slideshow",ho),Oi.component("slideshowParallax",no),Oi.component("sortable",co),Oi.component("tooltip",wo),Oi.component("upload",xo),po=(go=Oi).connect,vo=go.disconnect,"MutationObserver"in window&&(document.body?yi.read(ko):new MutationObserver(function(){document.body&&(this.disconnect(),ko())}).observe(document,{childList:!0,subtree:!0})),Oi}),function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("uikiticons",e):(t=t||self).UIkitIcons=e()}(this,function(){"use strict";function e(t){e.installed||t.icon.add({"500px":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z"/><path d="M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z"/><path d="M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z"/><path d="M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z"/></svg>',album:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="5" y="2" width="10" height="1"/><rect x="3" y="4" width="14" height="1"/><rect fill="none" stroke="#000" x="1.5" y="6.5" width="17" height="11"/></svg>',"arrow-down":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66"/><line fill="none" stroke="#000" x1="10.5" y1="4" x2="10.5" y2="15"/></svg>',"arrow-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="10 14 5 9.5 10 5"/><line fill="none" stroke="#000" x1="16" y1="9.5" x2="5" y2="9.52"/></svg>',"arrow-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="10 5 15 9.5 10 14"/><line fill="none" stroke="#000" x1="4" y1="9.5" x2="15" y2="9.5"/></svg>',"arrow-up":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4"/><line fill="none" stroke="#000" x1="10.5" y1="16" x2="10.5" y2="5"/></svg>',ban:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><line fill="none" stroke="#000" stroke-width="1.1" x1="4" y1="3.5" x2="16" y2="16.5"/></svg>',behance:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z"/><path d="M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z"/><rect x="13" y="4" width="5" height="1.4"/></svg>',bell:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z"/><path fill="none" stroke="#000" d="M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16"/></svg>',bold:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z"/></svg>',bolt:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z"/></svg>',bookmark:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5"/></svg>',calendar:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z"/><rect width="1" height="3" x="6" y="2"/><rect width="1" height="3" x="13" y="2"/></svg>',camera:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10.8" r="3.8"/><path fill="none" stroke="#000" d="M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z"/></svg>',cart:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="7.3" cy="17.3" r="1.4"/><circle cx="13.3" cy="17.3" r="1.4"/><polyline fill="none" stroke="#000" points="0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5"/></svg>',check:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.1" points="4,10 8,15 17,4"/></svg>',"chevron-double-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="10 14 6 10 10 6"/><polyline fill="none" stroke="#000" stroke-width="1.03" points="14 14 10 10 14 6"/></svg>',"chevron-double-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="10 6 14 10 10 14"/><polyline fill="none" stroke="#000" stroke-width="1.03" points="6 6 10 10 6 14"/></svg>',"chevron-down":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="16 7 10 13 4 7"/></svg>',"chevron-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="13 16 7 10 13 4"/></svg>',"chevron-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="7 4 13 10 7 16"/></svg>',"chevron-up":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.03" points="4 13 10 7 16 13"/></svg>',clock:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><rect x="9" y="4" width="1" height="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M13.018,14.197 L9.445,10.625"/></svg>',close:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.06" d="M16,16 L4,4"/><path fill="none" stroke="#000" stroke-width="1.06" d="M16,4 L4,16"/></svg>',"cloud-download":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6"/><polyline fill="none" stroke="#000" points="11.75 16 9.5 18.25 7.25 16"/><path fill="none" stroke="#000" d="M9.5,18 L9.5,9.5"/></svg>',"cloud-upload":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6"/><polyline fill="none" stroke="#000" points="7.25 11.75 9.5 9.5 11.75 11.75"/><path fill="none" stroke="#000" d="M9.5,18 L9.5,9.5"/></svg>',code:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.01" points="13,4 19,10 13,16"/><polyline fill="none" stroke="#000" stroke-width="1.01" points="7,4 1,10 7,16"/></svg>',cog:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="9.997" cy="10" r="3.31"/><path fill="none" stroke="#000" d="M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z"/></svg>',comment:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z"/></svg>',commenting:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5"/><circle cx="10" cy="8" r="1"/><circle cx="6" cy="8" r="1"/><circle cx="14" cy="8" r="1"/></svg>',comments:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="2 0.5 19.5 0.5 19.5 13"/><path d="M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z"/></svg>',copy:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="2.5" width="12" height="16"/><polyline fill="none" stroke="#000" points="5 0.5 17.5 0.5 17.5 17"/></svg>',"credit-card":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="1.5" y="4.5" width="17" height="12"/><rect x="1" y="7" width="18" height="3"/></svg>',database:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><ellipse fill="none" stroke="#000" cx="10" cy="4.64" rx="7.5" ry="3.14"/><path fill="none" stroke="#000" d="M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11"/><path fill="none" stroke="#000" d="M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25"/><path fill="none" stroke="#000" d="M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64"/></svg>',desktop:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="8" y="15" width="1" height="2"/><rect x="11" y="15" width="1" height="2"/><rect x="5" y="16" width="10" height="1"/><rect fill="none" stroke="#000" x="1.5" y="3.5" width="17" height="11"/></svg>',download:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="14,10 9.5,14.5 5,10"/><rect x="3" y="17" width="13" height="1"/><line fill="none" stroke="#000" x1="9.5" y1="13.91" x2="9.5" y2="3"/></svg>',dribbble:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.4" d="M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5"/><path fill="none" stroke="#000" stroke-width="1.4" d="M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6"/><path fill="none" stroke="#000" stroke-width="1.4" d="M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4"/><circle fill="none" stroke="#000" stroke-width="1.4" cx="10" cy="10" r="9"/></svg>',etsy:'<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path d="M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z"/></svg>',expand:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="13 2 18 2 18 7 17 7 17 3 13 3"/><polygon points="2 13 3 13 3 17 7 17 7 18 2 18"/><path fill="none" stroke="#000" stroke-width="1.1" d="M11,9 L17,3"/><path fill="none" stroke="#000" stroke-width="1.1" d="M3,17 L9,11"/></svg>',facebook:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z"/></svg>',"file-edit":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z"/><polyline fill="none" stroke="#000" points="16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5"/></svg>',"file-pdf":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" width="13" height="17" x="3.5" y="1.5"/><path d="M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z"/></svg>',"file-text":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" width="13" height="17" x="3.5" y="1.5"/><line fill="none" stroke="#000" x1="6" x2="12" y1="12.5" y2="12.5"/><line fill="none" stroke="#000" x1="6" x2="14" y1="8.5" y2="8.5"/><line fill="none" stroke="#000" x1="6" x2="14" y1="6.5" y2="6.5"/><line fill="none" stroke="#000" x1="6" x2="14" y1="10.5" y2="10.5"/></svg>',file:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="1.5" width="13" height="17"/></svg>',flickr:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="5.5" cy="9.5" r="3.5"/><circle cx="14.5" cy="9.5" r="3.5"/></svg>',folder:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5"/></svg>',forward:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z"/></svg>',foursquare:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z"/></svg>',future:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline points="19 2 18 2 18 6 14 6 14 7 19 7 19 2"/><path fill="none" stroke="#000" stroke-width="1.1" d="M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10"/><rect x="9" y="4" width="1" height="7"/><path d="M13.018,14.197 L9.445,10.625" fill="none" stroke="#000" stroke-width="1.1"/></svg>',"git-branch":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.2" cx="7" cy="3" r="2"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="14" cy="6" r="2"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="7" cy="17" r="2"/><path fill="none" stroke="#000" stroke-width="2" d="M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5"/></svg>',"git-fork":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.2" cx="5.79" cy="2.79" r="1.79"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="14.19" cy="2.79" r="1.79"/><circle fill="none" stroke="#000" stroke-width="1.2" cx="10.03" cy="16.79" r="1.79"/><path fill="none" stroke="#000" stroke-width="2" d="M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57"/></svg>',"github-alt":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z"/></svg>',github:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z"/></svg>',gitter:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="3.5" y="1" width="1.531" height="11.471"/><rect x="7.324" y="4.059" width="1.529" height="15.294"/><rect x="11.148" y="4.059" width="1.527" height="15.294"/><rect x="14.971" y="4.059" width="1.529" height="8.412"/></svg>',"google-plus":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.9,9c0,2.7-0.6,5-3.2,6.3c-3.7,1.8-8.1,0.2-9.4-3.6C-1.1,7.6,1.9,3.3,6.1,3c1.7-0.1,3.2,0.3,4.6,1.3 c0.1,0.1,0.3,0.2,0.4,0.4c-0.5,0.5-1.2,1-1.7,1.6c-1-0.8-2.1-1.1-3.5-0.9C5,5.6,4.2,6,3.6,6.7c-1.3,1.3-1.5,3.4-0.5,5 c1,1.7,2.6,2.3,4.6,1.9c1.4-0.3,2.4-1.2,2.6-2.6H6.9V9H12.9z"/><polygon points="20,9 20,11 18,11 18,13 16,13 16,11 14,11 14,9 16,9 16,7 18,7 18,9"/></svg>',google:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z"/></svg>',grid:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="2" y="2" width="3" height="3"/><rect x="8" y="2" width="3" height="3"/><rect x="14" y="2" width="3" height="3"/><rect x="2" y="8" width="3" height="3"/><rect x="8" y="8" width="3" height="3"/><rect x="14" y="8" width="3" height="3"/><rect x="2" y="14" width="3" height="3"/><rect x="8" y="14" width="3" height="3"/><rect x="14" y="14" width="3" height="3"/></svg>',happy:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="13" cy="7" r="1"/><circle cx="7" cy="7" r="1"/><circle fill="none" stroke="#000" cx="10" cy="10" r="8.5"/><path fill="none" stroke="#000" d="M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4"/></svg>',hashtag:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z"/></svg>',heart:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.03" d="M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z"/></svg>',history:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="#000" points="1 2 2 2 2 6 6 6 6 7 1 7 1 2"/><path fill="none" stroke="#000" stroke-width="1.1" d="M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10"/><rect x="9" y="4" width="1" height="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M13.018,14.197 L9.445,10.625"/></svg>',home:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65"/><polygon points="15 4 18 4 18 7 17 7 17 5 15 5"/><polygon points="3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19"/></svg>',image:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="16.1" cy="6.1" r="1.1"/><rect fill="none" stroke="#000" x=".5" y="2.5" width="19" height="15"/><polyline fill="none" stroke="#000" stroke-width="1.01" points="4,13 8,9 13,14"/><polyline fill="none" stroke="#000" stroke-width="1.01" points="11,12 12.5,10.5 16,14"/></svg>',info:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/></svg>',instagram:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z"/><circle cx="14.87" cy="5.26" r="1.09"/><path d="M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z"/></svg>',italic:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z"/></svg>',joomla:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z"/><path d="M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8"/><path d="M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8"/><path d="M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7"/></svg>',laptop:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="16" width="20" height="1"/><rect fill="none" stroke="#000" x="2.5" y="4.5" width="15" height="10"/></svg>',lifesaver:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,0.5 C4.76,0.5 0.5,4.76 0.5,10 C0.5,15.24 4.76,19.5 10,19.5 C15.24,19.5 19.5,15.24 19.5,10 C19.5,4.76 15.24,0.5 10,0.5 L10,0.5 Z M10,1.5 C11.49,1.5 12.89,1.88 14.11,2.56 L11.85,4.82 C11.27,4.61 10.65,4.5 10,4.5 C9.21,4.5 8.47,4.67 7.79,4.96 L5.58,2.75 C6.87,1.95 8.38,1.5 10,1.5 L10,1.5 Z M4.96,7.8 C4.67,8.48 4.5,9.21 4.5,10 C4.5,10.65 4.61,11.27 4.83,11.85 L2.56,14.11 C1.88,12.89 1.5,11.49 1.5,10 C1.5,8.38 1.95,6.87 2.75,5.58 L4.96,7.79 L4.96,7.8 L4.96,7.8 Z M10,18.5 C8.25,18.5 6.62,17.97 5.27,17.06 L7.46,14.87 C8.22,15.27 9.08,15.5 10,15.5 C10.79,15.5 11.53,15.33 12.21,15.04 L14.42,17.25 C13.13,18.05 11.62,18.5 10,18.5 L10,18.5 Z M10,14.5 C7.52,14.5 5.5,12.48 5.5,10 C5.5,7.52 7.52,5.5 10,5.5 C12.48,5.5 14.5,7.52 14.5,10 C14.5,12.48 12.48,14.5 10,14.5 L10,14.5 Z M15.04,12.21 C15.33,11.53 15.5,10.79 15.5,10 C15.5,9.08 15.27,8.22 14.87,7.46 L17.06,5.27 C17.97,6.62 18.5,8.25 18.5,10 C18.5,11.62 18.05,13.13 17.25,14.42 L15.04,12.21 L15.04,12.21 Z"/></svg>',link:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375"/><path fill="none" stroke="#000" stroke-width="1.1" d="M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375"/><path fill="none" stroke="#000" stroke-width="1.1" d="M7.925,11.875 L11.925,7.975"/></svg>',linkedin:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z"/><path d="M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z"/></svg>',list:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="6" y="4" width="12" height="1"/><rect x="6" y="9" width="12" height="1"/><rect x="6" y="14" width="12" height="1"/><rect x="2" y="4" width="2" height="1"/><rect x="2" y="9" width="2" height="1"/><rect x="2" y="14" width="2" height="1"/></svg>',location:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.01" d="M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z"/><circle fill="none" stroke="#000" cx="10" cy="6.8" r="2.3"/></svg>',lock:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" height="10" width="13" y="8.5" x="3.5"/><path fill="none" stroke="#000" d="M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8"/></svg>',mail:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="1.4,6.5 10,11 18.6,6.5"/><path d="M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z"/></svg>',menu:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="2" y="4" width="16" height="1"/><rect x="2" y="9" width="16" height="1"/><rect x="2" y="14" width="16" height="1"/></svg>',microphone:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" x1="10" x2="10" y1="16.44" y2="18.5"/><line fill="none" stroke="#000" x1="7" x2="13" y1="18.5" y2="18.5"/><path fill="none" stroke="#000" stroke-width="1.1" d="M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z"/><path fill="none" stroke="#000" stroke-width="1.1" d="M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6"/></svg>',"minus-circle":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9.5" cy="9.5" r="9"/><line fill="none" stroke="#000" x1="5" y1="9.5" x2="14" y2="9.5"/></svg>',minus:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect height="1" width="18" y="9" x="1"/></svg>',"more-vertical":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="3" r="2"/><circle cx="10" cy="10" r="2"/><circle cx="10" cy="17" r="2"/></svg>',more:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="3" cy="10" r="2"/><circle cx="10" cy="10" r="2"/><circle cx="17" cy="10" r="2"/></svg>',move:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="4,5 1,5 1,9 2,9 2,6 4,6"/><polygon points="1,16 2,16 2,18 4,18 4,19 1,19"/><polygon points="14,16 14,19 11,19 11,18 13,18 13,16"/><rect fill="none" stroke="#000" x="5.5" y="1.5" width="13" height="13"/><rect x="1" y="11" width="1" height="3"/><rect x="6" y="18" width="3" height="1"/></svg>',nut:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3"/><circle fill="none" stroke="#000" cx="10" cy="10" r="3.5"/></svg>',pagekit:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19"/></svg>',"paint-bucket":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.21,1 L0,11.21 L8.1,19.31 L18.31,9.1 L10.21,1 L10.21,1 Z M16.89,9.1 L15,11 L1.7,11 L10.21,2.42 L16.89,9.1 Z"/><path fill="none" stroke="#000" stroke-width="1.1" d="M6.42,2.33 L11.7,7.61"/><path d="M18.49,12 C18.49,12 20,14.06 20,15.36 C20,16.28 19.24,17 18.49,17 L18.49,17 C17.74,17 17,16.28 17,15.36 C17,14.06 18.49,12 18.49,12 L18.49,12 Z"/></svg>',pencil:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z"/><path fill="none" stroke="#000" d="M15.98,7.268 L13.851,5.148"/></svg>',"phone-landscape":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z"/><circle cx="3.8" cy="10.5" r=".8"/></svg>',phone:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z"/><circle cx="10.5" cy="16.5" r=".8"/></svg>',pinterest:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1"/></svg>',"play-circle":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" stroke-width="1.1" points="8.5 7 13.5 10 8.5 13"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/></svg>',play:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="6.5,5 14.5,10 6.5,15"/></svg>',"plus-circle":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9.5" cy="9.5" r="9"/><line fill="none" stroke="#000" x1="9.5" y1="5" x2="9.5" y2="14"/><line fill="none" stroke="#000" x1="5" y1="9.5" x2="14" y2="9.5"/></svg>',plus:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="1" width="1" height="17"/><rect x="1" y="9" width="17" height="1"/></svg>',print:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5"/><polyline fill="none" stroke="#000" points="15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5"/><rect fill="none" stroke="#000" width="11" height="6" x="4.5" y="11.5"/><rect width="8" height="1" x="6" y="13"/><rect width="8" height="1" x="6" y="15"/></svg>',pull:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7"/><line fill="none" stroke="#000" x1="9.5" y1="11" x2="9.5" y2="2"/><polyline fill="none" stroke="#000" points="6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5"/></svg>',push:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3"/><line fill="none" stroke="#000" x1="9.5" y1="10" x2="9.5" y2="1"/><polyline fill="none" stroke="#000" points="6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5"/></svg>',question:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><circle cx="10.44" cy="14.42" r="1.05"/><path fill="none" stroke="#000" stroke-width="1.2" d="M8.17,7.79 C8.17,4.75 12.72,4.73 12.72,7.72 C12.72,8.67 11.81,9.15 11.23,9.75 C10.75,10.24 10.51,10.73 10.45,11.4 C10.44,11.53 10.43,11.64 10.43,11.75"/></svg>',"quote-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z"/><path d="M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z"/></svg>',receiver:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.01" d="M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611"/></svg>',reddit:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z"/><path d="M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z"/><path d="M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z"/><path d="M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z"/></svg>',refresh:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5"/><polyline fill="none" stroke="#000" points="9.9 2 12.79 4.89 9.79 7.9"/></svg>',reply:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z"/></svg>',rss:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="3.12" cy="16.8" r="1.85"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5"/></svg>',search:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"/><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"/></svg>',server:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="3" y="3" width="1" height="2"/><rect x="5" y="3" width="1" height="2"/><rect x="7" y="3" width="1" height="2"/><rect x="16" y="3" width="1" height="1"/><rect x="16" y="10" width="1" height="1"/><circle fill="none" stroke="#000" cx="9.9" cy="17.4" r="1.4"/><rect x="3" y="10" width="1" height="2"/><rect x="5" y="10" width="1" height="2"/><rect x="9.5" y="14" width="1" height="2"/><rect x="3" y="17" width="6" height="1"/><rect x="11" y="17" width="6" height="1"/><rect fill="none" stroke="#000" x="1.5" y="1.5" width="17" height="5"/><rect fill="none" stroke="#000" x="1.5" y="8.5" width="17" height="5"/></svg>',settings:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><ellipse fill="none" stroke="#000" cx="6.11" cy="3.55" rx="2.11" ry="2.15"/><ellipse fill="none" stroke="#000" cx="6.11" cy="15.55" rx="2.11" ry="2.15"/><circle fill="none" stroke="#000" cx="13.15" cy="9.55" r="2.15"/><rect x="1" y="3" width="3" height="1"/><rect x="10" y="3" width="8" height="1"/><rect x="1" y="9" width="8" height="1"/><rect x="15" y="9" width="3" height="1"/><rect x="1" y="15" width="3" height="1"/><rect x="10" y="15" width="8" height="1"/></svg>',shrink:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="11 4 12 4 12 8 16 8 16 9 11 9"/><polygon points="4 11 9 11 9 16 8 16 8 12 4 12"/><path fill="none" stroke="#000" stroke-width="1.1" d="M12,8 L18,2"/><path fill="none" stroke="#000" stroke-width="1.1" d="M2,18 L8,12"/></svg>',"sign-in":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3"/><polygon points="9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5"/></svg>',"sign-out":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5"/><polygon points="13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3"/></svg>',social:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="13.4" y1="14" x2="6.3" y2="10.7"/><line fill="none" stroke="#000" stroke-width="1.1" x1="13.5" y1="5.5" x2="6.5" y2="8.8"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="15.5" cy="4.6" r="2.3"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="15.5" cy="14.8" r="2.3"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="4.5" cy="9.8" r="2.3"/></svg>',soundcloud:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z"/><rect x="6" y="6.5" width="1.5" height="8.5"/><rect x="3" y="8" width="1.5" height="7"/><rect y="10" width="1.5" height="5"/></svg>',star:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" stroke-width="1.01" points="10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27"/></svg>',strikethrough:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z"/><rect x="3" y="10" width="15" height="1"/></svg>',table:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="1" y="3" width="18" height="1"/><rect x="1" y="7" width="18" height="1"/><rect x="1" y="11" width="18" height="1"/><rect x="1" y="15" width="18" height="1"/></svg>',"tablet-landscape":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z"/><circle cx="3.7" cy="10.5" r=".8"/></svg>',tablet:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z"/><circle cx="10.5" cy="16.3" r=".8"/></svg>',tag:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" stroke-width="1.1" d="M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z"/><circle cx="14" cy="6" r="1"/></svg>',thumbnails:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="3.5" width="5" height="5"/><rect fill="none" stroke="#000" x="11.5" y="3.5" width="5" height="5"/><rect fill="none" stroke="#000" x="11.5" y="11.5" width="5" height="5"/><rect fill="none" stroke="#000" x="3.5" y="11.5" width="5" height="5"/></svg>',trash:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="6.5 3 6.5 1.5 13.5 1.5 13.5 3"/><polyline fill="none" stroke="#000" points="4.5 4 4.5 18.5 15.5 18.5 15.5 4"/><rect x="8" y="7" width="1" height="9"/><rect x="11" y="7" width="1" height="9"/><rect x="2" y="3" width="16" height="1"/></svg>',"triangle-down":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="5 7 15 7 10 12"/></svg>',"triangle-left":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="12 5 7 10 12 15"/></svg>',"triangle-right":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="8 5 13 10 8 15"/></svg>',"triangle-up":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="5 13 10 8 15 13"/></svg>',tripadvisor:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z"/></svg>',tumblr:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z"/></svg>',tv:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="7" y="16" width="6" height="1"/><rect fill="none" stroke="#000" x=".5" y="3.5" width="19" height="11"/></svg>',twitter:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74"/></svg>',uikit:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon points="14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3"/><polygon points="9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3"/></svg>',unlock:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect fill="none" stroke="#000" x="3.5" y="8.5" width="13" height="10"/><path fill="none" stroke="#000" d="M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9"/></svg>',upload:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" points="5 8 9.5 3.5 14 8"/><rect x="3" y="17" width="13" height="1"/><line fill="none" stroke="#000" x1="9.5" y1="15" x2="9.5" y2="4"/></svg>',user:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9.9" cy="6.4" r="4.4"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2"/></svg>',users:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="7.7" cy="8.6" r="3.5"/><path fill="none" stroke="#000" stroke-width="1.1" d="M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3"/><path fill="none" stroke="#000" stroke-width="1.1" d="M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1"/></svg>',"video-camera":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><polygon fill="none" stroke="#000" points="17.5 6.9 17.5 13.1 13.5 10.4 13.5 14.5 2.5 14.5 2.5 5.5 13.5 5.5 13.5 9.6 17.5 6.9"/></svg>',vimeo:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z"/></svg>',warning:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle cx="10" cy="14" r="1"/><circle fill="none" stroke="#000" stroke-width="1.1" cx="10" cy="10" r="9"/><path d="M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z"/></svg>',whatsapp:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9"/></svg>',wordpress:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z"/></svg>',world:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill="none" stroke="#000" d="M1,10.5 L19,10.5"/><path fill="none" stroke="#000" d="M2.35,15.5 L17.65,15.5"/><path fill="none" stroke="#000" d="M2.35,5.5 L17.523,5.5"/><path fill="none" stroke="#000" d="M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z"/><circle fill="none" stroke="#000" cx="10" cy="10.5" r="9"/></svg>',xing:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z"/><path d="M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z"/></svg>',yelp:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z"/></svg>',youtube:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z"/></svg>'})}return"undefined"!=typeof window&&window.UIkit&&window.UIkit.use(e),e});var u=function(t,e){return this instanceof u?t instanceof u?t:("string"==typeof t&&(t=this.select(t,e)),t&&t.nodeName&&(t=[t]),void(this.nodes=this.slice(t))):new u(t,e)};u.prototype={get length(){return this.nodes.length}},u.prototype.nodes=[],u.prototype.addClass=function(){return this.eacharg(arguments,function(t,e){t.classList.add(e)})},u.prototype.adjacent=function(o,t,i){return"number"==typeof t&&(t=0===t?[]:new Array(t).join().split(",").map(Number.call,Number)),this.each(function(n,r){var e=document.createDocumentFragment();u(t||{}).map(function(t,e){var i="function"==typeof o?o.call(this,t,e,n,r):o;return"string"==typeof i?this.generate(i):u(i)}).each(function(t){this.isInPage(t)?e.appendChild(u(t).clone().first()):e.appendChild(t)}),i.call(this,n,e)})},u.prototype.after=function(t,e){return this.adjacent(t,e,function(t,e){t.parentNode.insertBefore(e,t.nextSibling)})},u.prototype.append=function(t,e){return this.adjacent(t,e,function(t,e){t.appendChild(e)})},u.prototype.args=function(t,e,i){return"function"==typeof t&&(t=t(e,i)),"string"!=typeof t&&(t=this.slice(t).map(this.str(e,i))),t.toString().split(/[\s,]+/).filter(function(t){return t.length})},u.prototype.array=function(r){r=r;var o=this;return this.nodes.reduce(function(t,e,i){var n;return r?("string"==typeof(n=(n=r.call(o,e,i))||!1)&&(n=u(n)),n instanceof u&&(n=n.nodes)):n=e.innerHTML,t.concat(!1!==n?n:[])},[])},u.prototype.attr=function(t,e,n){return n=n?"data-":"",this.pairs(t,e,function(t,e){return t.getAttribute(n+e)},function(t,e,i){t.setAttribute(n+e,i)})},u.prototype.before=function(t,e){return this.adjacent(t,e,function(t,e){t.parentNode.insertBefore(e,t)})},u.prototype.children=function(t){return this.map(function(t){return this.slice(t.children)}).filter(t)},u.prototype.clone=function(){return this.map(function(t,e){var i=t.cloneNode(!0),n=this.getAll(i);return this.getAll(t).each(function(t,e){for(var i in this.mirror)this.mirror[i]&&this.mirror[i](t,n.nodes[e])}),i})},u.prototype.getAll=function(t){return u([t].concat(u("*",t).nodes))},u.prototype.mirror={},u.prototype.mirror.events=function(t,e){if(t._e)for(var i in t._e)t._e[i].forEach(function(t){u(e).on(i,t)})},u.prototype.mirror.select=function(t,e){u(t).is("select")&&(e.value=t.value)},u.prototype.mirror.textarea=function(t,e){u(t).is("textarea")&&(e.value=t.value)},u.prototype.closest=function(e){return this.map(function(t){do{if(u(t).is(e))return t}while((t=t.parentNode)&&t!==document)})},u.prototype.data=function(t,e){return this.attr(t,e,!0)},u.prototype.each=function(t){return this.nodes.forEach(t.bind(this)),this},u.prototype.eacharg=function(i,n){return this.each(function(e,t){this.args(i,e,t).forEach(function(t){n.call(this,e,t)},this)})},u.prototype.empty=function(){return this.each(function(t){for(;t.firstChild;)t.removeChild(t.firstChild)})},u.prototype.filter=function(e){var t=function(t){return t.matches=t.matches||t.msMatchesSelector||t.webkitMatchesSelector,t.matches(e||"*")};return"function"==typeof e&&(t=e),e instanceof u&&(t=function(t){return-1!==e.nodes.indexOf(t)}),u(this.nodes.filter(t))},u.prototype.find=function(e){return this.map(function(t){return u(e||"*",t)})},u.prototype.first=function(){return this.nodes[0]||!1},u.prototype.generate=function(t){return/^\s*<tr[> ]/.test(t)?u(document.createElement("table")).html(t).children().children().nodes:/^\s*<t(h|d)[> ]/.test(t)?u(document.createElement("table")).html(t).children().children().children().nodes:/^\s*</.test(t)?u(document.createElement("div")).html(t).children().nodes:document.createTextNode(t)},u.prototype.handle=function(){var t=this.slice(arguments).map(function(e){return"function"==typeof e?function(t){t.preventDefault(),e.apply(this,arguments)}:e},this);return this.on.apply(this,t)},u.prototype.hasClass=function(){return this.is("."+this.args(arguments).join("."))},u.prototype.html=function(e){return void 0===e?this.first().innerHTML||"":this.each(function(t){t.innerHTML=e})},u.prototype.is=function(t){return 0<this.filter(t).length},u.prototype.isInPage=function(t){return t!==document.body&&document.body.contains(t)},u.prototype.last=function(){return this.nodes[this.length-1]||!1},u.prototype.map=function(t){return t?u(this.array(t)).unique():this},u.prototype.not=function(e){return this.filter(function(t){return!u(t).is(e||!0)})},u.prototype.off=function(t){return this.eacharg(t,function(e,i){u(e._e?e._e[i]:[]).each(function(t){e.removeEventListener(i,t)})})},u.prototype.on=function(t,e,n){if("string"==typeof e){var r=e;e=function(e){var i=arguments;u(e.currentTarget).find(r).each(function(t){if(t===e.target||t.contains(e.target)){try{Object.defineProperty(e,"currentTarget",{get:function(){return t}})}catch(t){}n.apply(t,i)}})}}function i(t){return e.apply(this,[t].concat(t.detail||[]))}return this.eacharg(t,function(t,e){t.addEventListener(e,i),t._e=t._e||{},t._e[e]=t._e[e]||[],t._e[e].push(i)})},u.prototype.pairs=function(i,t,e,n){if(void 0!==t){var r=i;(i={})[r]=t}return"object"==typeof i?this.each(function(t){for(var e in i)n(t,e,i[e])}):this.length?e(this.first(),i):""},u.prototype.param=function(e){return Object.keys(e).map(function(t){return this.uri(t)+"="+this.uri(e[t])}.bind(this)).join("&")},u.prototype.parent=function(t){return this.map(function(t){return t.parentNode}).filter(t)},u.prototype.prepend=function(t,e){return this.adjacent(t,e,function(t,e){t.insertBefore(e,t.firstChild)})},u.prototype.remove=function(){return this.each(function(t){t.parentNode&&t.parentNode.removeChild(t)})},u.prototype.removeClass=function(){return this.eacharg(arguments,function(t,e){t.classList.remove(e)})},u.prototype.replace=function(t,e){var i=[];return this.adjacent(t,e,function(t,e){i=i.concat(this.slice(e.children)),t.parentNode.replaceChild(e,t)}),u(i)},u.prototype.scroll=function(){return this.first().scrollIntoView({behavior:"smooth"}),this},u.prototype.select=function(t,e){return t=t.replace(/^\s*/,"").replace(/\s*$/,""),/^</.test(t)?u().generate(t):(e||document).querySelectorAll(t)},u.prototype.serialize=function(){var n=this;return this.slice(this.first().elements).reduce(function(e,i){return!i.name||i.disabled||"file"===i.type?e:/(checkbox|radio)/.test(i.type)&&!i.checked?e:"select-multiple"===i.type?(u(i.options).each(function(t){t.selected&&(e+="&"+n.uri(i.name)+"="+n.uri(t.value))}),e):e+"&"+n.uri(i.name)+"="+n.uri(i.value)},"").slice(1)},u.prototype.siblings=function(t){return this.parent().children(t).not(this)},u.prototype.size=function(){return this.first().getBoundingClientRect()},u.prototype.slice=function(t){return t&&0!==t.length&&"string"!=typeof t&&"[object Function]"!==t.toString()?t.length?[].slice.call(t.nodes||t):[t]:[]},u.prototype.str=function(e,i){return function(t){return"function"==typeof t?t.call(this,e,i):t.toString()}},u.prototype.text=function(e){return void 0===e?this.first().textContent||"":this.each(function(t){t.textContent=e})},u.prototype.toggleClass=function(t,e){return!!e===e?this[e?"addClass":"removeClass"](t):this.eacharg(t,function(t,e){t.classList.toggle(e)})},u.prototype.trigger=function(t){var r=this.slice(arguments).slice(1);return this.eacharg(t,function(t,e){var i,n={bubbles:!0,cancelable:!0,detail:r};try{i=new window.CustomEvent(e,n)}catch(t){(i=document.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,r)}t.dispatchEvent(i)})},u.prototype.unique=function(){return u(this.nodes.reduce(function(t,e){return null!=e&&!1!==e&&-1===t.indexOf(e)?t.concat(e):t},[]))},u.prototype.uri=function(t){return encodeURIComponent(t).replace(/!/g,"%21").replace(/'/g,"%27").replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/\*/g,"%2A").replace(/%20/g,"+")},u.prototype.wrap=function(t){return this.map(function(e){return u(t).each(function(t){(function(t){for(;t.firstElementChild;)t=t.firstElementChild;return u(t)})(t).append(e.cloneNode(!0)),e.parentNode.replaceChild(t,e)})})},"object"==typeof module&&module.exports&&(module.exports=u,module.exports.u=u);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
